[
    {
        "children": [], 
        "depends_on": null, 
        "help": null, 
        "name": "IDF_CMAKE", 
        "range": null, 
        "title": null, 
        "type": "bool"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": null, 
                "help": "The prefix/path that is used to call the toolchain. The default setting assumes\na crosstool-ng gcc setup that is in your PATH.\n", 
                "name": "TOOLPREFIX", 
                "range": null, 
                "title": "Compiler toolchain path/prefix", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The executable name/path that is used to run python. On some systems Python 2.x\nmay need to be invoked as python2.\n\n(Note: This option is used with the GNU Make build system only, not idf.py\nor CMake-based builds.)\n", 
                "name": "PYTHON", 
                "range": null, 
                "title": "Python 2 interpreter", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Adds --warn-undefined-variables to MAKEFLAGS. This causes make to\nprint a warning any time an undefined variable is referenced.\n\nThis option helps find places where a variable reference is misspelled\nor otherwise missing, but it can be unwanted if you have Makefiles which\ndepend on undefined variables expanding to an empty string.\n", 
                "name": "MAKE_WARN_UNDEFINED_VARIABLES", 
                "range": null, 
                "title": "'make' warns on undefined variables", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "title": "SDK tool configuration", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "name": "LOG_BOOTLOADER_LEVEL_NONE", 
                        "range": null, 
                        "title": "No output", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "name": "LOG_BOOTLOADER_LEVEL_ERROR", 
                        "range": null, 
                        "title": "Error", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "name": "LOG_BOOTLOADER_LEVEL_WARN", 
                        "range": null, 
                        "title": "Warning", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "name": "LOG_BOOTLOADER_LEVEL_INFO", 
                        "range": null, 
                        "title": "Info", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "name": "LOG_BOOTLOADER_LEVEL_DEBUG", 
                        "range": null, 
                        "title": "Debug", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice LOG_BOOTLOADER_LEVEL>", 
                        "help": null, 
                        "name": "LOG_BOOTLOADER_LEVEL_VERBOSE", 
                        "range": null, 
                        "title": "Verbose", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Specify how much output to see in bootloader logs.\n", 
                "name": "LOG_BOOTLOADER_LEVEL", 
                "title": "Bootloader log verbosity", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "LOG_BOOTLOADER_LEVEL", 
                "range": null, 
                "title": null, 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "FLASHMODE_QIO || FLASHMODE_QOUT", 
                "help": "This value is ignored unless flash mode is set to QIO or QOUT *and* the SPI flash pins have been\noverriden by setting the efuses SPI_PAD_CONFIG_xxx.\n\nWhen this is the case, the Efuse config only defines 3 of the 4 Quad I/O data pins. The WP pin (aka ESP32\npin \"SD_DATA_3\" or SPI flash pin \"IO2\") is not specified in Efuse. That pin number is compiled into the bootloader\ninstead.\n\nThe default value (GPIO 7) is correct for WP pin on ESP32-D2WD integrated flash.\n", 
                "name": "BOOTLOADER_SPI_WP_PIN", 
                "range": [
                    0, 
                    33
                ], 
                "title": "SPI Flash WP Pin when customising pins via efuse (read help)", 
                "type": "int"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "!ESPTOOLPY_FLASHFREQ_80M && <choice BOOTLOADER_VDDSDIO_BOOST>", 
                        "help": null, 
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_8V", 
                        "range": null, 
                        "title": "1.8V", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice BOOTLOADER_VDDSDIO_BOOST>", 
                        "help": null, 
                        "name": "BOOTLOADER_VDDSDIO_BOOST_1_9V", 
                        "range": null, 
                        "title": "1.9V", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "If this option is enabled, and VDDSDIO LDO is set to 1.8V (using EFUSE\nor MTDI bootstrapping pin), bootloader will change LDO settings to\noutput 1.9V instead. This helps prevent flash chip from browning out\nduring flash programming operations.\n\nThis option has no effect if VDDSDIO is set to 3.3V, or if the internal\nVDDSDIO regulator is disabled via efuse.\n", 
                "name": "BOOTLOADER_VDDSDIO_BOOST", 
                "title": "VDDSDIO LDO voltage", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a factory reset, this GPIO must be pulled low on reset.\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.\n", 
                        "name": "BOOTLOADER_NUM_PIN_FACTORY_RESET", 
                        "range": [
                            0, 
                            39
                        ], 
                        "title": "Number of the GPIO input for factory reset", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "The device will boot from \"factory\" partition (or OTA slot 0 if no factory partition is present) after a factory reset.\n", 
                        "name": "BOOTLOADER_OTA_DATA_ERASE", 
                        "range": null, 
                        "title": "Clear OTA data on factory reset (select factory partition)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_FACTORY_RESET", 
                        "help": "Allows customers to select which data partitions will be erased while factory reset.\n\nSpecify the names of partitions as a comma-delimited with optional spaces for readability. (Like this: \"nvs, phy_init, ...\")\nMake sure that the name specified in the partition table and here are the same.\nPartitions of type \"app\" cannot be specified here.\n", 
                        "name": "BOOTLOADER_DATA_FACTORY_RESET", 
                        "range": null, 
                        "title": "Comma-separated names of partitions to clear on factory reset", 
                        "type": "string"
                    }
                ], 
                "depends_on": null, 
                "help": "Allows to reset the device to factory settings:\n- clear one or more data partitions;\n- boot from \"factory\" partition.\nThe factory reset will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.\n", 
                "name": "BOOTLOADER_FACTORY_RESET", 
                "range": null, 
                "title": "GPIO triggers factory reset", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "BOOTLOADER_APP_TEST", 
                        "help": "The selected GPIO will be configured as an input with internal pull-up enabled.\nTo trigger a test app, this GPIO must be pulled low on reset.\nAfter the GPIO input is deactivated and the device reboots, the old application will boot.\n(factory or OTA[x]).\nNote that GPIO34-39 do not have an internal pullup and an external one must be provided.\n", 
                        "name": "BOOTLOADER_NUM_PIN_APP_TEST", 
                        "range": [
                            0, 
                            39
                        ], 
                        "title": "Number of the GPIO input to boot TEST partition", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Allows to run the test app from \"TEST\" partition.\nA boot from \"test\" partition will occur if there is a GPIO input pulled low while device starts up.\nSee settings below.\n", 
                "name": "BOOTLOADER_APP_TEST", 
                "range": null, 
                "title": "GPIO triggers boot from test app partition", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "BOOTLOADER_FACTORY_RESET || BOOTLOADER_APP_TEST", 
                "help": "The GPIO must be held low continuously for this period of time after reset\nbefore a factory reset or test partition boot (as applicable) is performed.\n", 
                "name": "BOOTLOADER_HOLD_TIME_GPIO", 
                "range": null, 
                "title": "Hold time of GPIO for reset/test mode (seconds)", 
                "type": "int"
            }
        ], 
        "depends_on": null, 
        "title": "Bootloader config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED || SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT", 
                "help": null, 
                "name": "SECURE_SIGNED_ON_BOOT", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED || SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT", 
                "help": null, 
                "name": "SECURE_SIGNED_ON_UPDATE", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_SIGNED_ON_BOOT || SECURE_SIGNED_ON_UPDATE", 
                "help": null, 
                "name": "SECURE_SIGNED_APPS", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                        "help": "If this option is set, the bootloader will be compiled with code to verify that an app is signed before booting it.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option doesn't add significant security by itself so most users will want to leave it disabled.\n", 
                        "name": "SECURE_SIGNED_ON_BOOT_NO_SECURE_BOOT", 
                        "range": null, 
                        "title": "Bootloader verifies app signatures", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                        "help": "If this option is set, any OTA updated apps will have the signature verified before being considered valid.\n\nWhen enabled, the signature is automatically checked whenever the esp_ota_ops.h APIs are used for OTA updates,\nor esp_image_format.h APIs are used to verify apps.\n\nIf hardware secure boot is enabled, this option is always enabled and cannot be disabled.\nIf hardware secure boot is not enabled, this option still adds significant security against network-based attackers by preventing spoofing of OTA updates.\n", 
                        "name": "SECURE_SIGNED_ON_UPDATE_NO_SECURE_BOOT", 
                        "range": null, 
                        "title": "Verify app signature on update", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "!SECURE_BOOT_ENABLED", 
                "help": "Require apps to be signed to verify their integrity.\n\nThis option uses the same app signature scheme as hardware secure boot, but unlike hardware secure boot it does not prevent the bootloader from being physically updated. This means that the device can be secured against remote network access, but not physical access. Compared to using hardware Secure Boot this option is much simpler to implement.\n", 
                "name": "SECURE_SIGNED_APPS_NO_SECURE_BOOT", 
                "range": null, 
                "title": "Require signed app images", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_BOOTLOADER_MODE>", 
                                "help": "On first boot, the bootloader will generate a key which is not readable externally or by software. A digest is generated from the bootloader image itself. This digest will be verified on each subsequent boot.\n\nEnabling this option means that the bootloader cannot be changed after the first time it is booted.\n", 
                                "name": "SECURE_BOOTLOADER_ONE_TIME_FLASH", 
                                "range": null, 
                                "title": "One-time flash", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SECURE_BOOTLOADER_MODE>", 
                                "help": "Generate a reusable secure bootloader key, derived (via SHA-256) from the secure boot signing key.\n\nThis allows the secure bootloader to be re-flashed by anyone with access to the secure boot signing key.\n\nThis option is less secure than one-time flash, because a leak of the digest key from one device allows reflashing of any device that uses it.\n", 
                                "name": "SECURE_BOOTLOADER_REFLASHABLE", 
                                "range": null, 
                                "title": "Reflashable", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "SECURE_BOOT_ENABLED", 
                        "help": null, 
                        "name": "SECURE_BOOTLOADER_MODE", 
                        "title": "Secure bootloader mode", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "help": "Build a bootloader which enables secure boot on first boot.\n\nOnce enabled, secure boot will not boot a modified bootloader. The bootloader will only load a partition table or boot an app if the data has a verified digital signature. There are implications for reflashing updated apps once secure boot is enabled.\n\nWhen enabling secure boot, JTAG and ROM BASIC Interpreter are permanently disabled by default.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "name": "SECURE_BOOT_ENABLED", 
                "range": null, 
                "title": "Enable hardware secure boot in bootloader (READ DOCS FIRST)", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                        "help": "Path to the key file used to sign app images.\n\nKey file is an ECDSA private key (NIST256p curve) in PEM format.\n\nPath is evaluated relative to the project directory.\n\nYou can generate a new signing key by running the following command:\nespsecure.py generate_signing_key secure_boot_signing_key.pem\n\nSee docs/security/secure-boot.rst for details.\n", 
                        "name": "SECURE_BOOT_SIGNING_KEY", 
                        "range": null, 
                        "title": "Secure boot private signing key", 
                        "type": "string"
                    }
                ], 
                "depends_on": "SECURE_SIGNED_APPS", 
                "help": "Once secure boot or signed app requirement is enabled, app images are required to be signed.\n\nIf enabled (default), these binary files are signed as part of the build process. The file named in \"Secure boot private signing key\" will be used to sign the image.\n\nIf disabled, unsigned app/partition data will be built. They must be signed manually using espsecure.py (for example, on a remote signing server.)\n", 
                "name": "SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                "range": null, 
                "title": "Sign binaries during build", 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_SIGNED_APPS && !SECURE_BOOT_BUILD_SIGNED_BINARIES", 
                "help": "Path to a public key file used to verify signed images. This key is compiled into the bootloader and/or app,\nto verify app images.\n\nKey file is in raw binary format, and can be extracted from a\nPEM formatted private key using the espsecure.py\nextract_public_key command.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "name": "SECURE_BOOT_VERIFICATION_KEY", 
                "range": null, 
                "title": "Secure boot public signature verification key", 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>", 
                        "help": null, 
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_256BIT", 
                        "range": null, 
                        "title": "No encoding (256 bit key)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice SECURE_BOOTLOADER_KEY_ENCODING>", 
                        "help": null, 
                        "name": "SECURE_BOOTLOADER_KEY_ENCODING_192BIT", 
                        "range": null, 
                        "title": "3/4 encoding (192 bit key)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "SECURE_BOOTLOADER_REFLASHABLE", 
                "help": "In reflashable secure bootloader mode, a hardware key is derived from the signing key (with SHA-256) and can be written to efuse\nwith espefuse.py.\n\nNormally this is a 256-bit key, but if 3/4 Coding Scheme is used on the device then the efuse key is truncated to 192 bits.\n\nThis configuration item doesn't change any firmware code, it only changes the size of key binary which is generated at build time.\n", 
                "name": "SECURE_BOOTLOADER_KEY_ENCODING", 
                "title": "Hardware Key Encoding", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": "SECURE_BOOT_ENABLED", 
                "help": "You can disable some of the default protections offered by secure boot, in order to enable testing or a custom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to https://docs.espressif.com/projects/esp-idf/en/latest/security/secure-boot.html before enabling.\n", 
                "name": "SECURE_BOOT_INSECURE", 
                "range": null, 
                "title": "Allow potentially insecure options", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_ENABLED", 
                        "help": "You can disable some of the default protections offered by flash encryption, in order to enable testing or a custom combination of security features.\n\nOnly enable these options if you are very sure.\n\nRefer to docs/security/secure-boot.rst and docs/security/flash-encryption.rst for details.\n", 
                        "name": "FLASH_ENCRYPTION_INSECURE", 
                        "range": null, 
                        "title": "Allow potentially insecure options", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "If this option is set, flash contents will be encrypted by the bootloader on first boot.\n\nNote: After first boot, the system will be permanently encrypted. Re-flashing an encrypted\nsystem is complicated and not always possible.\n\nRead https://docs.espressif.com/projects/esp-idf/en/latest/security/flash-encryption.html before enabling.\n", 
                "name": "FLASH_ENCRYPTION_ENABLED", 
                "range": null, 
                "title": "Enable flash encryption on boot (READ DOCS FIRST)", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE || FLASH_ENCRYPTION_INSECURE", 
                        "help": "By default, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\nWhen either flash encryption or secure boot are enabled, the default is to\ndisable this BASIC fallback mode permanently via efuse.\n\nIf this option is set, this efuse is not burned and the BASIC ROM Console may\nremain accessible.  Only set this option in testing environments.\n", 
                        "name": "SECURE_BOOT_ALLOW_ROM_BASIC", 
                        "range": null, 
                        "title": "Leave ROM BASIC Interpreter available on reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE || FLASH_ENCRYPTION_INSECURE", 
                        "help": "If not set (default), the bootloader will permanently disable JTAG (across entire chip) on first boot when either secure boot or flash encryption is enabled.\n\nSetting this option leaves JTAG on for debugging, which negates all protections of flash encryption and some of the protections of secure boot.\n\nOnly set this option in testing environments.\n", 
                        "name": "SECURE_BOOT_ALLOW_JTAG", 
                        "range": null, 
                        "title": "Allow JTAG Debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE", 
                        "help": "If not set (default), app partition size must be a multiple of 64KB. App images are padded to 64KB length, and the bootloader checks any trailing bytes after the signature (before the next 64KB boundary) have not been written. This is because flash cache maps entire 64KB pages into the address space. This prevents an attacker from appending unverified data after the app image in the flash, causing it to be mapped into the address space.\n\nSetting this option allows the app partition length to be unaligned, and disables padding of the app image to this length. It is generally not recommended to set this option, unless you have a legacy partitioning scheme which doesn't support 64KB aligned partition lengths.\n", 
                        "name": "SECURE_BOOT_ALLOW_SHORT_APP_PARTITION", 
                        "range": null, 
                        "title": "Allow app partition length not 64KB aligned", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader encryption access on first boot. If set, the UART bootloader will still be able to access hardware encryption.\n\nIt is recommended to only set this option in testing environments.\n", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_ENCRYPT", 
                        "range": null, 
                        "title": "Leave UART bootloader encryption enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader decryption access on first boot. If set, the UART bootloader will still be able to access hardware decryption.\n\nOnly set this option in testing environments. Setting this option allows complete bypass of flash encryption.\n", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_DECRYPT", 
                        "range": null, 
                        "title": "Leave UART bootloader decryption enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_INSECURE", 
                        "help": "If not set (default), the bootloader will permanently disable UART bootloader flash cache access on first boot. If set, the UART bootloader will still be able to access the flash cache.\n\nOnly set this option in testing environments.\n", 
                        "name": "FLASH_ENCRYPTION_UART_BOOTLOADER_ALLOW_CACHE", 
                        "range": null, 
                        "title": "Leave UART bootloader flash cache enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SECURE_BOOT_INSECURE", 
                        "help": "If this option is set, all permanent secure boot changes (via Efuse) are disabled.\n\nLog output will state changes which would be applied, but they will not be.\n\nThis option is for testing purposes only - it completely disables secure boot protection.\n", 
                        "name": "SECURE_BOOT_TEST_MODE", 
                        "range": null, 
                        "title": "Secure boot test mode: don't permanently set any efuses", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "Potentially insecure options", 
                "type": "menu"
            }
        ], 
        "depends_on": null, 
        "title": "Security features", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The serial port that's connected to the ESP chip. This can be overridden by setting the ESPPORT\nenvironment variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.\n", 
                "name": "ESPTOOLPY_PORT", 
                "range": null, 
                "title": "Default serial port", 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "name": "ESPTOOLPY_BAUD_115200B", 
                        "range": null, 
                        "title": "115200 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "name": "ESPTOOLPY_BAUD_230400B", 
                        "range": null, 
                        "title": "230400 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "name": "ESPTOOLPY_BAUD_921600B", 
                        "range": null, 
                        "title": "921600 baud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "name": "ESPTOOLPY_BAUD_2MB", 
                        "range": null, 
                        "title": "2Mbaud", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BAUD>", 
                        "help": null, 
                        "name": "ESPTOOLPY_BAUD_OTHER", 
                        "range": null, 
                        "title": "Other baud rate", 
                        "type": "bool"
                    }
                ], 
                "depends_on": "!IDF_CMAKE", 
                "help": "Default baud rate to use while communicating with the ESP chip. Can be overridden by\nsetting the ESPBAUD variable.\n\nThis value is ignored when using the CMake-based build system or idf.py.\n", 
                "name": "ESPTOOLPY_BAUD", 
                "title": "Default baud rate", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "ESPTOOLPY_BAUD_OTHER_VAL", 
                "range": null, 
                "title": "Other baud rate value", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": null, 
                "name": "ESPTOOLPY_BAUD", 
                "range": null, 
                "title": null, 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": "!IDF_CMAKE", 
                "help": "The flasher tool can send data compressed using zlib, letting the ROM on the ESP chip\ndecompress it on the fly before flashing it. For most payloads, this should result in a\nspeed increase.\n", 
                "name": "ESPTOOLPY_COMPRESSED", 
                "range": null, 
                "title": "Use compressed upload", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "name": "FLASHMODE_QIO", 
                        "range": null, 
                        "title": "QIO", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "name": "FLASHMODE_QOUT", 
                        "range": null, 
                        "title": "QOUT", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "name": "FLASHMODE_DIO", 
                        "range": null, 
                        "title": "DIO", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice FLASHMODE>", 
                        "help": null, 
                        "name": "FLASHMODE_DOUT", 
                        "range": null, 
                        "title": "DOUT", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Mode the flash chip is flashed in, as well as the default mode for the\nbinary to run in.\n", 
                "name": "FLASHMODE", 
                "title": "Flash SPI mode", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "ESPTOOLPY_FLASHMODE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHFREQ_80M", 
                        "range": null, 
                        "title": "80 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHFREQ_40M", 
                        "range": null, 
                        "title": "40 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHFREQ_26M", 
                        "range": null, 
                        "title": "26 MHz", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHFREQ>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHFREQ_20M", 
                        "range": null, 
                        "title": "20 MHz", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "The SPI flash frequency to be used.\n", 
                "name": "ESPTOOLPY_FLASHFREQ", 
                "title": "Flash SPI speed", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "ESPTOOLPY_FLASHFREQ", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHSIZE_1MB", 
                        "range": null, 
                        "title": "1 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHSIZE_2MB", 
                        "range": null, 
                        "title": "2 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHSIZE_4MB", 
                        "range": null, 
                        "title": "4 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHSIZE_8MB", 
                        "range": null, 
                        "title": "8 MB", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_FLASHSIZE>", 
                        "help": null, 
                        "name": "ESPTOOLPY_FLASHSIZE_16MB", 
                        "range": null, 
                        "title": "16 MB", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "SPI flash size, in megabytes\n", 
                "name": "ESPTOOLPY_FLASHSIZE", 
                "title": "Flash size", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "ESPTOOLPY_FLASHSIZE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "If this option is set, 'make flash' targets will automatically detect\nthe flash size and update the bootloader image when flashing.\n", 
                "name": "ESPTOOLPY_FLASHSIZE_DETECT", 
                "range": null, 
                "title": "Detect flash size when flashing bootloader", 
                "type": "bool"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BEFORE>", 
                        "help": null, 
                        "name": "ESPTOOLPY_BEFORE_RESET", 
                        "range": null, 
                        "title": "Reset to bootloader", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_BEFORE>", 
                        "help": null, 
                        "name": "ESPTOOLPY_BEFORE_NORESET", 
                        "range": null, 
                        "title": "No reset", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Configure whether esptool.py should reset the ESP32 before flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.\n", 
                "name": "ESPTOOLPY_BEFORE", 
                "title": "Before flashing", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "ESPTOOLPY_BEFORE", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "name": "ESPTOOLPY_AFTER_RESET", 
                        "range": null, 
                        "title": "Reset after flashing", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice ESPTOOLPY_AFTER>", 
                        "help": null, 
                        "name": "ESPTOOLPY_AFTER_NORESET", 
                        "range": null, 
                        "title": "Stay in bootloader", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Configure whether esptool.py should reset the ESP32 after flashing.\n\nAutomatic resetting depends on the RTS & DTR signals being\nwired from the serial port to the ESP32. Most USB development\nboards do this internally.\n", 
                "name": "ESPTOOLPY_AFTER", 
                "title": "After flashing", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "ESPTOOLPY_AFTER", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "name": "MONITOR_BAUD_9600B", 
                        "range": null, 
                        "title": "9600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "name": "MONITOR_BAUD_57600B", 
                        "range": null, 
                        "title": "57600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "name": "MONITOR_BAUD_115200B", 
                        "range": null, 
                        "title": "115200 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "name": "MONITOR_BAUD_230400B", 
                        "range": null, 
                        "title": "230400 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "name": "MONITOR_BAUD_921600B", 
                        "range": null, 
                        "title": "921600 bps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "name": "MONITOR_BAUD_2MB", 
                        "range": null, 
                        "title": "2 Mbps", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice MONITOR_BAUD>", 
                        "help": null, 
                        "name": "MONITOR_BAUD_OTHER", 
                        "range": null, 
                        "title": "Custom baud rate", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Baud rate to use when running 'make monitor' to view serial output\nfrom a running chip.\n\nCan override by setting the MONITORBAUD environment variable.\n", 
                "name": "MONITOR_BAUD", 
                "title": "'make monitor' baud rate", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "MONITOR_BAUD_OTHER_VAL", 
                "range": null, 
                "title": "Custom baud rate value", 
                "type": "int"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "MONITOR_BAUD", 
                "range": null, 
                "title": null, 
                "type": "int"
            }
        ], 
        "depends_on": null, 
        "title": "Serial flasher config", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "name": "PARTITION_TABLE_SINGLE_APP", 
                        "range": null, 
                        "title": "Single factory app, no OTA", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "name": "PARTITION_TABLE_TWO_OTA", 
                        "range": null, 
                        "title": "Factory app, two OTA definitions", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice PARTITION_TABLE_TYPE>", 
                        "help": null, 
                        "name": "PARTITION_TABLE_CUSTOM", 
                        "range": null, 
                        "title": "Custom partition table CSV", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "The partition table to flash to the ESP32. The partition table\ndetermines where apps, data and other resources are expected to\nbe found.\n\nThe predefined partition table CSV descriptions can be found\nin the components/partition_table directory. Otherwise it's\npossible to create a new custom partition CSV for your application.\n", 
                "name": "PARTITION_TABLE_TYPE", 
                "title": "Partition Table", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Name of the custom partition CSV filename. This path is evaluated\nrelative to the project root directory.\n", 
                "name": "PARTITION_TABLE_CUSTOM_FILENAME", 
                "range": null, 
                "title": "Custom partition CSV file", 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": null, 
                "name": "PARTITION_TABLE_FILENAME", 
                "range": null, 
                "title": null, 
                "type": "string"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "The address of partition table (by default 0x8000).\nAllows you to move the partition table, it gives more space for the bootloader.\nNote that the bootloader and app will both need to be compiled with the same PARTITION_TABLE_OFFSET value.\n", 
                "name": "PARTITION_TABLE_OFFSET", 
                "range": null, 
                "title": "Offset of partition table", 
                "type": "hex"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Generate an MD5 checksum for the partition table for protecting the\nintegrity of the table. The generation should be turned off for legacy\nbootloaders which cannot recognize the MD5 checksum in the partition\ntable.\n", 
                "name": "PARTITION_TABLE_MD5", 
                "range": null, 
                "title": "Generate an MD5 checksum for the partition table", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "title": "Partition Table", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_COMPILER>", 
                        "help": null, 
                        "name": "OPTIMIZATION_LEVEL_DEBUG", 
                        "range": null, 
                        "title": "Debug (-Og)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_COMPILER>", 
                        "help": null, 
                        "name": "OPTIMIZATION_LEVEL_RELEASE", 
                        "range": null, 
                        "title": "Release (-Os)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "This option sets compiler optimization level (gcc -O argument).\n\n- for \"Release\" setting, -Os flag is added to CFLAGS.\n- for \"Debug\" setting, -Og flag is added to CFLAGS.\n\n\"Release\" with -Os produces smaller & faster compiled code but it\nmay be harder to correlated code addresses to source files when debugging.\n\nTo add custom optimization settings, set CFLAGS and/or CPPFLAGS\nin project makefile, before including $(IDF_PATH)/make/project.mk. Note that\ncustom optimization levels may be unsupported.\n", 
                "name": "OPTIMIZATION_COMPILER", 
                "title": "Optimization Level", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "Enable assertions. Assertion content and line number will be printed on failure.\n", 
                        "name": "OPTIMIZATION_ASSERTIONS_ENABLED", 
                        "range": null, 
                        "title": "Enabled", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "Enable silent assertions. Failed assertions will abort(), user needs to\nuse the aborting address to find the line number with the failed assertion.\n", 
                        "name": "OPTIMIZATION_ASSERTIONS_SILENT", 
                        "range": null, 
                        "title": "Silent (saves code size)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice OPTIMIZATION_ASSERTION_LEVEL>", 
                        "help": "If assertions are disabled, -DNDEBUG is added to CPPFLAGS.\n", 
                        "name": "OPTIMIZATION_ASSERTIONS_DISABLED", 
                        "range": null, 
                        "title": "Disabled (sets -DNDEBUG)", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Assertions can be:\n\n- Enabled. Failure will print verbose assertion details. This is the default.\n\n- Set to \"silent\" to save code size (failed assertions will abort() but user\n  needs to use the aborting address to find the line number with the failed assertion.)\n\n- Disabled entirely (not recommended for most configurations.) -DNDEBUG is added\n  to CPPFLAGS in this case.\n", 
                "name": "OPTIMIZATION_ASSERTION_LEVEL", 
                "title": "Assertion level", 
                "type": "choice"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "CXX_EXCEPTIONS", 
                        "help": "Size (in bytes) of the emergency memory pool for C++ exceptions. This pool will be used to allocate\nmemory for thrown exceptions when there is not enough memory on the heap.\n", 
                        "name": "CXX_EXCEPTIONS_EMG_POOL_SIZE", 
                        "range": null, 
                        "title": "Emergency Pool Size", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "help": "Enabling this option compiles all IDF C++ files with exception support enabled.\n\nDisabling this option disables C++ exception support in all compiled files, and any libstdc++ code which throws\nan exception will abort instead.\n\nEnabling this option currently adds an additional ~500 bytes of heap overhead\nwhen an exception is thrown in user code for the first time.\n", 
                "is_menuconfig": true, 
                "name": "CXX_EXCEPTIONS", 
                "range": null, 
                "title": "Enable C++ exceptions", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "<choice STACK_CHECK_MODE>", 
                        "help": null, 
                        "name": "STACK_CHECK_NONE", 
                        "range": null, 
                        "title": "None", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice STACK_CHECK_MODE>", 
                        "help": null, 
                        "name": "STACK_CHECK_NORM", 
                        "range": null, 
                        "title": "Normal", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice STACK_CHECK_MODE>", 
                        "help": null, 
                        "name": "STACK_CHECK_STRONG", 
                        "range": null, 
                        "title": "Strong", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "<choice STACK_CHECK_MODE>", 
                        "help": null, 
                        "name": "STACK_CHECK_ALL", 
                        "range": null, 
                        "title": "Overall", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "help": "Stack smashing protection mode. Emit extra code to check for buffer overflows, such as stack\nsmashing attacks. This is done by adding a guard variable to functions with vulnerable objects.\nThe guards are initialized when a function is entered and then checked when the function exits.\nIf a guard check fails, program is halted. Protection has the following modes:\n\n- In NORMAL mode (GCC flag: -fstack-protector) only functions that call alloca,\n  and functions with buffers larger than 8 bytes are protected.\n\n- STRONG mode (GCC flag: -fstack-protector-strong) is like NORMAL, but includes\n  additional functions to be protected -- those that have local array definitions,\n  or have references to local frame addresses.\n\n- In OVERALL mode (GCC flag: -fstack-protector-all) all functions are protected.\n\nModes have the following impact on code performance and coverage:\n\n- performance: NORMAL > STRONG > OVERALL\n\n- coverage: NORMAL < STRONG < OVERALL\n", 
                "name": "STACK_CHECK_MODE", 
                "title": "Stack smashing protection mode", 
                "type": "choice"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Stack smashing protection.\n", 
                "name": "STACK_CHECK", 
                "range": null, 
                "title": null, 
                "type": "bool"
            }, 
            {
                "children": [], 
                "depends_on": null, 
                "help": "Adds -Wwrite-strings flag for the C/C++ compilers.\n\nFor C, this gives string constants the type ``const char[]`` so that\ncopying the address of one into a non-const ``char *`` pointer\nproduces a warning. This warning helps to find at compile time code\nthat tries to write into a string constant.\n\nFor C++, this warns about the deprecated conversion from string\nliterals to ``char *``.\n", 
                "name": "WARN_WRITE_STRINGS", 
                "range": null, 
                "title": "Enable -Wwrite-strings warning flag", 
                "type": "bool"
            }
        ], 
        "depends_on": null, 
        "title": "Compiler options", 
        "type": "menu"
    }, 
    {
        "children": [
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_APPTRACE_DESTINATION>", 
                                "help": null, 
                                "name": "ESP32_APPTRACE_DEST_TRAX", 
                                "range": null, 
                                "title": "Trace memory", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_APPTRACE_DESTINATION>", 
                                "help": null, 
                                "name": "ESP32_APPTRACE_DEST_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select destination for application trace: trace memory or none (to disable).\n", 
                        "name": "ESP32_APPTRACE_DESTINATION", 
                        "title": "Data Destination", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!ESP32_TRAX", 
                        "help": "Enables/disable application tracing module.\n", 
                        "name": "ESP32_APPTRACE_ENABLE", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables/disable application tracing module internal sync lock.\n", 
                        "name": "ESP32_APPTRACE_LOCK_ENABLE", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_ENABLE", 
                        "help": "Timeout for flushing last trace data to host in case of panic. In ms.\nUse -1 to disable timeout and wait forever.\n", 
                        "name": "ESP32_APPTRACE_ONPANIC_HOST_FLUSH_TMO", 
                        "range": [
                            -1, 
                            5000
                        ], 
                        "title": "Timeout for flushing last trace data to host on panic", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_DEST_TRAX", 
                        "help": "Threshold for flushing last trace data to host on panic in post-mortem mode.\nThis is minimal amount of data needed to perform flush. In bytes.\n", 
                        "name": "ESP32_APPTRACE_POSTMORTEM_FLUSH_TRAX_THRESH", 
                        "range": [
                            0, 
                            16384
                        ], 
                        "title": "Threshold for flushing last trace data to host on panic", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_APPTRACE_DEST_TRAX", 
                        "help": "Size of the buffer for events in bytes. It is useful for buffering events from\nthe time critical code (scheduler, ISRs etc). If this parameter is 0 then\nevents will be discarded when main HW buffer is full.\n", 
                        "name": "ESP32_APPTRACE_PENDING_DATA_SIZE_MAX", 
                        "range": null, 
                        "title": "Size of the pending data buffer", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "FREERTOS_UNICORE && !PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "name": "SYSVIEW_TS_SOURCE_CCOUNT", 
                                                "range": null, 
                                                "title": "CPU cycle counter (CCOUNT)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_00", 
                                                "range": null, 
                                                "title": "Timer 0, Group 0", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_01", 
                                                "range": null, 
                                                "title": "Timer 1, Group 0", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_10", 
                                                "range": null, 
                                                "title": "Timer 0, Group 1", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "!PM_ENABLE && <choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "name": "SYSVIEW_TS_SOURCE_TIMER_11", 
                                                "range": null, 
                                                "title": "Timer 1, Group 1", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SYSVIEW_TS_SOURCE>", 
                                                "help": null, 
                                                "name": "SYSVIEW_TS_SOURCE_ESP_TIMER", 
                                                "range": null, 
                                                "title": "esp_timer high resolution timer", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "SystemView needs to use a hardware timer as the source of timestamps\nwhen tracing. This option selects the timer for it.\n", 
                                        "name": "SYSVIEW_TS_SOURCE", 
                                        "title": "Timer to use as timestamp source", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Trace Buffer Overflow\" event.\n", 
                                        "name": "SYSVIEW_EVT_OVERFLOW_ENABLE", 
                                        "range": null, 
                                        "title": "Trace Buffer Overflow Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR Enter\" event.\n", 
                                        "name": "SYSVIEW_EVT_ISR_ENTER_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Enter Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR Exit\" event.\n", 
                                        "name": "SYSVIEW_EVT_ISR_EXIT_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Exit Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"ISR to Scheduler\" event.\n", 
                                        "name": "SYSVIEW_EVT_ISR_TO_SCHEDULER_ENABLE", 
                                        "range": null, 
                                        "title": "ISR Exit to Scheduler Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Start Execution\" event.\n", 
                                        "name": "SYSVIEW_EVT_TASK_START_EXEC_ENABLE", 
                                        "range": null, 
                                        "title": "Task Start Execution Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Stop Execution\" event.\n", 
                                        "name": "SYSVIEW_EVT_TASK_STOP_EXEC_ENABLE", 
                                        "range": null, 
                                        "title": "Task Stop Execution Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Start Ready State\" event.\n", 
                                        "name": "SYSVIEW_EVT_TASK_START_READY_ENABLE", 
                                        "range": null, 
                                        "title": "Task Start Ready State Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Stop Ready State\" event.\n", 
                                        "name": "SYSVIEW_EVT_TASK_STOP_READY_ENABLE", 
                                        "range": null, 
                                        "title": "Task Stop Ready State Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Create\" event.\n", 
                                        "name": "SYSVIEW_EVT_TASK_CREATE_ENABLE", 
                                        "range": null, 
                                        "title": "Task Create Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Task Terminate\" event.\n", 
                                        "name": "SYSVIEW_EVT_TASK_TERMINATE_ENABLE", 
                                        "range": null, 
                                        "title": "Task Terminate Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"System Idle\" event.\n", 
                                        "name": "SYSVIEW_EVT_IDLE_ENABLE", 
                                        "range": null, 
                                        "title": "System Idle Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Timer Enter\" event.\n", 
                                        "name": "SYSVIEW_EVT_TIMER_ENTER_ENABLE", 
                                        "range": null, 
                                        "title": "Timer Enter Event", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SYSVIEW_ENABLE && ESP32_APPTRACE_ENABLE", 
                                        "help": "Enables \"Timer Exit\" event.\n", 
                                        "name": "SYSVIEW_EVT_TIMER_EXIT_ENABLE", 
                                        "range": null, 
                                        "title": "Timer Exit Event", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "ESP32_APPTRACE_ENABLE && ESP32_APPTRACE_ENABLE", 
                                "help": "Enables supporrt for SEGGER SystemView tracing functionality.\n", 
                                "name": "SYSVIEW_ENABLE", 
                                "range": null, 
                                "title": "SystemView Tracing Enable", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "ESP32_APPTRACE_ENABLE", 
                        "title": "FreeRTOS SystemView Tracing", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_DEBUG_STUBS_ENABLE && ESP32_APPTRACE_ENABLE && !SYSVIEW_ENABLE", 
                        "help": "Enables support for GCOV data transfer to host.\n", 
                        "name": "ESP32_GCOV_ENABLE", 
                        "range": null, 
                        "title": "GCOV to Host Enable", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "Application Level Tracing", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SPI_FLASH_VERIFY_WRITE", 
                                "help": "If this option is enabled, if SPI flash write verification fails then a log error line\nwill be written with the address, expected & actual values. This can be useful when\ndebugging hardware SPI flash problems.\n", 
                                "name": "SPI_FLASH_LOG_FAILED_WRITE", 
                                "range": null, 
                                "title": "Log errors if verification fails", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "SPI_FLASH_VERIFY_WRITE", 
                                "help": "If this option is enabled, any SPI flash write which tries to set zero bits in the flash to\nones will log a warning. Such writes will not result in the requested data appearing identically\nin flash once written, as SPI NOR flash can only set bits to one when an entire sector is erased.\nAfter erasing, individual bits can only be written from one to zero.\n\nNote that some software (such as SPIFFS) which is aware of SPI NOR flash may write one bits as an\noptimisation, relying on the data in flash becoming a bitwise AND of the new data and any existing data.\nSuch software will log spurious warnings if this option is enabled.\n", 
                                "name": "SPI_FLASH_WARN_SETTING_ZERO_TO_ONE", 
                                "range": null, 
                                "title": "Log warning if writing zero bits to ones", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If this option is enabled, any time SPI flash is written then the data will be read\nback and verified. This can catch hardware problems with SPI flash, or flash which\nwas not erased before verification.\n", 
                        "name": "SPI_FLASH_VERIFY_WRITE", 
                        "range": null, 
                        "title": "Verify SPI flash writes", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option enables the following APIs:\n\n- spi_flash_reset_counters\n- spi_flash_dump_counters\n- spi_flash_get_counters\n\nThese APIs may be used to collect performance data for spi_flash APIs\nand to help understand behaviour of libraries which use SPI flash.\n", 
                        "name": "SPI_FLASH_ENABLE_COUNTERS", 
                        "range": null, 
                        "title": "Enable operation counters", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable this flag to use patched versions of SPI flash ROM driver functions.\nThis option is needed to write to flash on ESP32-D2WD, and any configuration\nwhere external SPI flash is connected to non-default pins.\n", 
                        "name": "SPI_FLASH_ROM_DRIVER_PATCH", 
                        "range": null, 
                        "title": "Enable SPI flash ROM driver patched functions", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_WRITING_DANGEROUS_REGIONS>", 
                                "help": null, 
                                "name": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_ABORTS", 
                                "range": null, 
                                "title": "Aborts", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_WRITING_DANGEROUS_REGIONS>", 
                                "help": null, 
                                "name": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_FAILS", 
                                "range": null, 
                                "title": "Fails", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice SPI_FLASH_WRITING_DANGEROUS_REGIONS>", 
                                "help": null, 
                                "name": "SPI_FLASH_WRITING_DANGEROUS_REGIONS_ALLOWED", 
                                "range": null, 
                                "title": "Allowed", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "SPI flash APIs can optionally abort or return a failure code\nif erasing or writing addresses that fall at the beginning\nof flash (covering the bootloader and partition table) or that\noverlap the app partition that contains the running app.\n\nIt is not recommended to ever write to these regions from an IDF app,\nand this check prevents logic errors or corrupted firmware memory from\ndamaging these regions.\n\nNote that this feature *does not* check calls to the esp_rom_xxx SPI flash\nROM functions. These functions should not be called directly from IDF\napplications.\n", 
                        "name": "SPI_FLASH_WRITING_DANGEROUS_REGIONS", 
                        "title": "Writing to dangerous flash regions", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "title": "SPI Flash driver", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Maximum TLS message length (in bytes) supported by mbedTLS.\n\n16384 is the default and this value is required to comply\nfully with TLS standards.\n\nHowever you can set a lower value in order to save RAM. This\nis safe if the other end of the connection supports Maximum\nFragment Length Negotiation Extension (max_fragment_length,\nsee RFC6066) or you know for certain that it will never send a\nmessage longer than a certain number of bytes.\n\nIf the value is set too low, symptoms are a failed TLS\nhandshake or a return value of MBEDTLS_ERR_SSL_INVALID_RECORD\n(-0x7200).\n", 
                        "name": "MBEDTLS_SSL_MAX_CONTENT_LEN", 
                        "range": [
                            512, 
                            16384
                        ], 
                        "title": "TLS maximum message content length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable mbedTLS debugging functions at compile time.\n\nIf this option is enabled, you can include\n    \"mbedtls/esp_debug.h\" and call mbedtls_esp_enable_debug_log()\n    at runtime in order to enable mbedTLS debug output via the ESP\n    log mechanism.\n", 
                        "name": "MBEDTLS_DEBUG", 
                        "range": null, 
                        "title": "Enable mbedTLS debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated AES encryption & decryption.\n\nNote that if the ESP32 CPU is running at 240MHz, hardware AES does not\noffer any speed boost over software AES.\n", 
                        "name": "MBEDTLS_HARDWARE_AES", 
                        "range": null, 
                        "title": "Enable hardware AES acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_HARDWARE_MPI", 
                                "help": "Use an interrupt to coordinate MPI operations.\n\nThis allows other code to run on the CPU while an MPI operation is pending.\nOtherwise the CPU busy-waits.\n", 
                                "name": "MBEDTLS_MPI_USE_INTERRUPT", 
                                "range": null, 
                                "title": "Use interrupt for MPI operations", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated multiple precision integer operations.\n\nHardware accelerated multiplication, modulo multiplication,\nand modular exponentiation for up to 4096 bit results.\n\nThese operations are used by RSA.\n", 
                        "name": "MBEDTLS_HARDWARE_MPI", 
                        "range": null, 
                        "title": "Enable hardware MPI (bignum) acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable hardware accelerated SHA1, SHA256, SHA384 & SHA512 in mbedTLS.\n\nDue to a hardware limitation, hardware acceleration is only\nguaranteed if SHA digests are calculated one at a time. If more\nthan one SHA digest is calculated at the same time, one will\nbe calculated fully in hardware and the rest will be calculated\n(at least partially calculated) in software. This happens automatically.\n\nSHA hardware acceleration is faster than software in some situations but\nslower in others. You should benchmark to find the best setting for you.\n", 
                        "name": "MBEDTLS_HARDWARE_SHA", 
                        "range": null, 
                        "title": "Enable hardware SHA acceleration", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_HAVE_TIME", 
                                "help": "System has time.h and time(), gmtime() and the clock is correct.\nThe time needs to be correct (not necesarily very accurate, but at least\nthe date should be correct). This is used to verify the validity period of\nX.509 certificates.\n\nIt is suggested that you should get the real time by \"SNTP\".\n", 
                                "name": "MBEDTLS_HAVE_TIME_DATE", 
                                "range": null, 
                                "title": "Enable mbedtls time data", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!ESP32_TIME_SYSCALL_USE_NONE", 
                        "help": "System has time.h and time().\nThe time does not need to be correct, only time differences are used,\n", 
                        "name": "MBEDTLS_HAVE_TIME", 
                        "range": null, 
                        "title": "Enable mbedtls time", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "name": "MBEDTLS_TLS_SERVER_AND_CLIENT", 
                                "range": null, 
                                "title": "Server & Client", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "name": "MBEDTLS_TLS_SERVER_ONLY", 
                                "range": null, 
                                "title": "Server", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "name": "MBEDTLS_TLS_CLIENT_ONLY", 
                                "range": null, 
                                "title": "Client", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice MBEDTLS_TLS_MODE>", 
                                "help": null, 
                                "name": "MBEDTLS_TLS_DISABLED", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "mbedTLS can be compiled with protocol support for the TLS\nserver, TLS client, or both server and client.\n\nReducing the number of TLS roles supported saves code size.\n", 
                        "name": "MBEDTLS_TLS_MODE", 
                        "title": "TLS Protocol Role", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "MBEDTLS_TLS_SERVER", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "MBEDTLS_TLS_CLIENT", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "MBEDTLS_TLS_ENABLED", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support symmetric key PSK (pre-shared-key) TLS key exchange modes.\n", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_PSK", 
                                        "range": null, 
                                        "title": "Enable PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_DHE_PSK", 
                                        "range": null, 
                                        "title": "Enable DHE-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support Elliptic-Curve-Diffie-Hellman PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_PSK", 
                                        "range": null, 
                                        "title": "Enable ECDHE-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_PSK_MODES && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support RSA PSK (pre-shared-key) TLS authentication modes.\n", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_RSA_PSK", 
                                        "range": null, 
                                        "title": "Enable RSA-PSK based ciphersuite modes", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to show configuration for different types of pre-shared-key TLS authentatication methods.\n\nLeaving this options disabled will save code size if they are not used.\n", 
                                "name": "MBEDTLS_PSK_MODES", 
                                "range": null, 
                                "title": "Enable pre-shared-key ciphersuites", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to support ciphersuites with prefix TLS-RSA-WITH-\n", 
                                "name": "MBEDTLS_KEY_EXCHANGE_RSA", 
                                "range": null, 
                                "title": "Enable RSA-only based ciphersuite modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to support ciphersuites with prefix TLS-DHE-RSA-WITH-\n", 
                                "name": "MBEDTLS_KEY_EXCHANGE_DHE_RSA", 
                                "range": null, 
                                "title": "Enable DHE-RSA based ciphersuite modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_RSA", 
                                        "range": null, 
                                        "title": "Enable ECDHE-RSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA", 
                                        "range": null, 
                                        "title": "Enable ECDHE-ECDSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_ECDSA_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA", 
                                        "range": null, 
                                        "title": "Enable ECDH-ECDSA based ciphersuite modes", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE && MBEDTLS_ECDH_C && MBEDTLS_TLS_ENABLED", 
                                        "help": "Enable to support ciphersuites with prefix TLS-ECDHE-RSA-WITH-\n", 
                                        "name": "MBEDTLS_KEY_EXCHANGE_ECDH_RSA", 
                                        "range": null, 
                                        "title": "Enable ECDH-RSA based ciphersuite modes", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_ECP_C && MBEDTLS_TLS_ENABLED", 
                                "help": "Enable to show Elliptic Curve based ciphersuite mode options.\n\nDisabling all Elliptic Curve ciphersuites saves code size and\ncan give slightly faster TLS handshakes, provided the server supports\nRSA-only ciphersuite modes.\n", 
                                "name": "MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE", 
                                "range": null, 
                                "title": "Support Elliptic Curve based ciphersuites", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "title": "TLS Key Exchange Methods", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "The two main uses of renegotiation are (1) refresh keys on long-lived\nconnections and (2) client authentication after the initial handshake.\nIf you don't need renegotiation, disabling it will save code size and\nreduce the possibility of abuse/vulnerability.\n", 
                        "name": "MBEDTLS_SSL_RENEGOTIATION", 
                        "range": null, 
                        "title": "Support TLS renegotiation", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Support the legacy SSL 3.0 protocol. Most servers will speak a newer\nTLS protocol these days.\n", 
                        "name": "MBEDTLS_SSL_PROTO_SSL3", 
                        "range": null, 
                        "title": "Legacy SSL 3.0 support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "name": "MBEDTLS_SSL_PROTO_TLS1", 
                        "range": null, 
                        "title": "Support TLS 1.0 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "name": "MBEDTLS_SSL_PROTO_TLS1_1", 
                        "range": null, 
                        "title": "Support TLS 1.1 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": null, 
                        "name": "MBEDTLS_SSL_PROTO_TLS1_2", 
                        "range": null, 
                        "title": "Support TLS 1.2 protocol", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_SSL_PROTO_TLS1_1 || MBEDTLS_SSL_PROTO_TLS1_2", 
                        "help": "Requires TLS 1.1 to be enabled for DTLS 1.0\nRequires TLS 1.2 to be enabled for DTLS 1.2\n", 
                        "name": "MBEDTLS_SSL_PROTO_DTLS", 
                        "range": null, 
                        "title": "Support DTLS protocol (all versions)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Disabling this option will save some code size if it is not needed.\n", 
                        "name": "MBEDTLS_SSL_ALPN", 
                        "range": null, 
                        "title": "Support ALPN (Application Layer Protocol Negotiation)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "MBEDTLS_TLS_ENABLED", 
                        "help": "Support RFC 5077 session tickets. See mbedTLS documentation for more details.\n\nDisabling this option will save some code size.\n", 
                        "name": "MBEDTLS_SSL_SESSION_TICKETS", 
                        "range": null, 
                        "title": "TLS: Support RFC 5077 SSL session tickets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "name": "MBEDTLS_AES_C", 
                                "range": null, 
                                "title": "AES block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "name": "MBEDTLS_CAMELLIA_C", 
                                "range": null, 
                                "title": "Camellia block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the DES block cipher to support 3DES-based TLS ciphersuites.\n\n3DES is vulnerable to the Sweet32 attack and should only be enabled\nif absolutely necessary.\n", 
                                "name": "MBEDTLS_DES_C", 
                                "range": null, 
                                "title": "DES block cipher (legacy, insecure)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "name": "MBEDTLS_RC4_DISABLED", 
                                        "range": null, 
                                        "title": "Disabled", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "name": "MBEDTLS_RC4_ENABLED_NO_DEFAULT", 
                                        "range": null, 
                                        "title": "Enabled, not in default ciphersuites", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice MBEDTLS_RC4_MODE>", 
                                        "help": null, 
                                        "name": "MBEDTLS_RC4_ENABLED", 
                                        "range": null, 
                                        "title": "Enabled", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "ARCFOUR (RC4) stream cipher can be disabled entirely, enabled but not\nadded to default ciphersuites, or enabled completely.\n\nPlease consider the security implications before enabling RC4.\n", 
                                "name": "MBEDTLS_RC4_MODE", 
                                "title": "RC4 Stream Cipher (legacy, insecure)", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the Blowfish block cipher (not used for TLS sessions.)\n\nThe Blowfish cipher is not used for mbedTLS TLS sessions but can be\nused for other purposes. Read up on the limitations of Blowfish (including\nSweet32) before enabling.\n", 
                                "name": "MBEDTLS_BLOWFISH_C", 
                                "range": null, 
                                "title": "Blowfish block cipher (read help)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enables the XTEA block cipher.\n", 
                                "name": "MBEDTLS_XTEA_C", 
                                "range": null, 
                                "title": "XTEA block cipher", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C", 
                                "help": "Enable Counter with CBC-MAC (CCM) modes for AES and/or Camellia ciphers.\n\nDisabling this option saves some code size.\n", 
                                "name": "MBEDTLS_CCM_C", 
                                "range": null, 
                                "title": "CCM (Counter with CBC-MAC) block cipher modes", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_AES_C || MBEDTLS_CAMELLIA_C", 
                                "help": "Enable Galois/Counter Mode for AES and/or Camellia ciphers.\n\nThis option is generally faster than CCM.\n", 
                                "name": "MBEDTLS_GCM_C", 
                                "range": null, 
                                "title": "GCM (Galois/Counter) block cipher modes", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "Symmetric Ciphers", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable the RIPEMD-160 hash algorithm.\n", 
                        "name": "MBEDTLS_RIPEMD160_C", 
                        "range": null, 
                        "title": "Enable RIPEMD-160 hash algorithm", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable decoding/parsing of PEM formatted certificates.\n\nIf your certificates are all in the simpler DER format, disabling\nthis option will save some code size.\n", 
                                "name": "MBEDTLS_PEM_PARSE_C", 
                                "range": null, 
                                "title": "Read & Parse PEM formatted certificates", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable writing of PEM formatted certificates.\n\nIf writing certificate data only in DER format, disabling this\noption will save some code size.\n", 
                                "name": "MBEDTLS_PEM_WRITE_C", 
                                "range": null, 
                                "title": "Write PEM formatted certificates", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Support for parsing X.509 Certifificate Revocation Lists.\n", 
                                "name": "MBEDTLS_X509_CRL_PARSE_C", 
                                "range": null, 
                                "title": "X.509 CRL parsing", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Support for parsing X.509 Certifificate Signing Requests\n", 
                                "name": "MBEDTLS_X509_CSR_PARSE_C", 
                                "range": null, 
                                "title": "X.509 CSR parsing", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "Certificates", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "MBEDTLS_ECDH_C", 
                                        "help": "Enable ECDSA. Needed to use ECDSA-xxx TLS ciphersuites.\n", 
                                        "name": "MBEDTLS_ECDSA_C", 
                                        "range": null, 
                                        "title": "Elliptic Curve DSA", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable ECDH. Needed to use ECDHE-xxx TLS ciphersuites.\n", 
                                "name": "MBEDTLS_ECDH_C", 
                                "range": null, 
                                "title": "Elliptic Curve Diffie-Hellman (ECDH)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP192R1 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_SECP192R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP192R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP224R1 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_SECP224R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP224R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP256R1 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_SECP256R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP256R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP384R1 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_SECP384R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP384R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP521R1 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_SECP521R1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP521R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP192K1 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_SECP192K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP192K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP224K1 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_SECP224K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP224K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for SECP256K1 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_SECP256K1_ENABLED", 
                                "range": null, 
                                "title": "Enable SECP256K1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_BP256R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP256R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_BP384R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP384R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "support for DP Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_BP512R1_ENABLED", 
                                "range": null, 
                                "title": "Enable BP512R1 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "Enable support for CURVE25519 Elliptic Curve.\n", 
                                "name": "MBEDTLS_ECP_DP_CURVE25519_ENABLED", 
                                "range": null, 
                                "title": "Enable CURVE25519 curve", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "MBEDTLS_ECP_C", 
                                "help": "NIST 'modulo p' optimisations increase Elliptic Curve operation performance.\n\nDisabling this option saves some code size.\n", 
                                "name": "MBEDTLS_ECP_NIST_OPTIM", 
                                "range": null, 
                                "title": "NIST 'modulo p' optimisations", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": null, 
                        "is_menuconfig": true, 
                        "name": "MBEDTLS_ECP_C", 
                        "range": null, 
                        "title": "Elliptic Curve Ciphers", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "title": "mbedTLS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this feature is enabled, all traffic from layer2(WIFI Driver) will be\ncopied to a new buffer before sending it to layer3(LWIP stack), freeing\nthe layer2 buffer.\nPlease be notified that the total layer2 receiving buffer is fixed and\nESP32 currently supports 25 layer2 receiving buffer, when layer2 buffer\nruns out of memory, then the incoming packets will be dropped in hardware.\nThe layer3 buffer is allocated from the heap, so the total layer3 receiving\nbuffer depends on the available heap size, when heap runs out of memory,\nno copy will be sent to layer3 and packet will be dropped in layer2.\nPlease make sure you fully understand the impact of this feature before\nenabling it.\n", 
                        "name": "L2_TO_L3_COPY", 
                        "range": null, 
                        "title": "Enable copy between Layer2 and Layer3 packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this feature is enabled, some functions relating to RX/TX in LWIP will be\nput into IRAM, it can improve UDP/TCP throughput by >10% for single core mode,\nit doesn't help too much for dual core mode. On the other hand, it needs about\n10KB IRAM for these optimizations.\n\nIf this feature is disabled, all lwip functions will be put into FLASH.\n", 
                        "name": "LWIP_IRAM_OPTIMIZATION", 
                        "range": null, 
                        "title": "Enable LWIP IRAM optimization", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Sockets take up a certain amount of memory, and allowing fewer\nsockets to be open at the same time conserves memory. Specify\nthe maximum amount of sockets here. The valid value is from 1\nto 16.\n", 
                        "name": "LWIP_MAX_SOCKETS", 
                        "range": [
                            1, 
                            16
                        ], 
                        "title": "Max number of open sockets", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The virtual filesystem layer of select() redirects sockets to\nlwip_select() and non-socket file descriptors to their respective driver\nimplementations. If this option is enabled then all calls of select()\nwill be redirected to lwip_select(), therefore, select can be used\nfor sockets only.\n", 
                        "name": "USE_ONLY_LWIP_SELECT", 
                        "range": null, 
                        "title": "Support LWIP socket select() only", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_SO_REUSE", 
                                "help": "Enabling this option means that any incoming broadcast or multicast\npacket will be copied to all of the local sockets that it matches\n(may be more than one if SO_REUSEADDR is set on the socket.)\n\nThis increases memory overhead as the packets need to be copied,\nhowever they are only copied per matching socket. You can safely\ndisable it if you don't plan to receive broadcast or multicast\ntraffic on more than one socket at a time.\n", 
                                "name": "LWIP_SO_REUSE_RXTOALL", 
                                "range": null, 
                                "title": "SO_REUSEADDR copies broadcast/multicast to all matches", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option allows binding to a port which remains in\nTIME_WAIT.\n", 
                        "name": "LWIP_SO_REUSE", 
                        "range": null, 
                        "title": "Enable SO_REUSEADDR option", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows checking for available data on a netconn.\n", 
                        "name": "LWIP_SO_RCVBUF", 
                        "range": null, 
                        "title": "Enable SO_RCVBUF option", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set maximum number of NTP servers used by LwIP SNTP module.\nFirst argument of sntp_setserver/sntp_setservername functions\nis limited to this value.\n", 
                        "name": "LWIP_DHCP_MAX_NTP_SERVERS", 
                        "range": [
                            1, 
                            16
                        ], 
                        "title": "Maximum number of NTP servers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows fragmenting outgoing IP packets if their size\nexceeds MTU.\n", 
                        "name": "LWIP_IP_FRAG", 
                        "range": null, 
                        "title": "Enable fragment outgoing IP packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows reassemblying incoming fragmented IP packets.\n", 
                        "name": "LWIP_IP_REASSEMBLY", 
                        "range": null, 
                        "title": "Enable reassembly incoming fragmented IP packets", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows LWIP statistics\n", 
                        "name": "LWIP_STATS", 
                        "range": null, 
                        "title": "Enable LWIP statistics", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option allows ARP table to be updated.\n\nIf this option is enabled, the incoming IP packets cause the ARP table to be\nupdated with the source MAC and IP addresses supplied in the packet.\nYou may want to disable this if you do not trust LAN peers to have the\ncorrect addresses, or as a limited approach to attempt to handle\nspoofing. If disabled, lwIP will need to make a new ARP request if\nthe peer is not already in the ARP table, adding a little latency.\nThe peer *is* in the ARP table if it requested our address before.\nAlso notice that this slows down input processing of every IP packet!\n\nThere are two known issues in real application if this feature is enabled:\n - The LAN peer may have bug to update the ARP table after the ARP entry is aged out.\n   If the ARP entry on the LAN peer is aged out but failed to be updated, all IP packets\n   sent from LWIP to the LAN peer will be dropped by LAN peer.\n - The LAN peer may not be trustful, the LAN peer may send IP packets to LWIP with\n   two different MACs, but the same IP address. If this happens, the LWIP has problem\n   to receive IP packets from LAN peer.\n\nSo the recommendation is to disable this option.\nHere the LAN peer means the other side to which the ESP station or soft-AP is connected.\n", 
                        "name": "LWIP_ETHARP_TRUST_IP_MAC", 
                        "range": null, 
                        "title": "Enable LWIP ARP trust", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP_GRATUITOUS_ARP", 
                                "help": "Set the timer interval for gratuitous ARP. The default value is 60s\n", 
                                "name": "GARP_TMR_INTERVAL", 
                                "range": null, 
                                "title": "GARP timer interval(seconds)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable this option allows to send gratuitous ARP periodically.\n\nThis option solve the compatibility issues.If the ARP table of the AP is old, and the AP\ndoesn't send ARP request to update it's ARP table, this will lead to the STA sending IP packet fail.\nThus we send gratuitous ARP periodically to let AP update it's ARP table.\n", 
                        "name": "ESP_GRATUITOUS_ARP", 
                        "range": null, 
                        "title": "Send gratuitous ARP periodically", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set TCPIP task receive mail box size. Generally bigger value means higher throughput\nbut more memory. The value should be bigger than UDP/TCP mail box size.\n", 
                        "name": "TCPIP_RECVMBOX_SIZE", 
                        "range": [
                            6, 
                            64
                        ], 
                        "title": "TCPIP task receive mail box size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enabling this option performs a check (via ARP request) if the offered IP address\nis not already in use by another host on the network.\n", 
                        "name": "LWIP_DHCP_DOES_ARP_CHECK", 
                        "range": null, 
                        "title": "DHCP: Perform ARP check on any offered address", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The DHCP server is calculating lease time multiplying the sent\nand received times by this number of seconds per unit.\nThe default is 60, that equals one minute.\n", 
                                "name": "LWIP_DHCPS_LEASE_UNIT", 
                                "range": [
                                    1, 
                                    3600
                                ], 
                                "title": "Multiplier for lease time, in seconds", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of DHCP clients that are connected to the server.\nAfter this number is exceeded, DHCP server removes of the oldest device\nfrom it's address pool, without notification.\n", 
                                "name": "LWIP_DHCPS_MAX_STATION_NUM", 
                                "range": [
                                    1, 
                                    64
                                ], 
                                "title": "Maximum number of stations", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "DHCP server", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "DHCP client will send this many probes before self-assigning a\nlink local address.\n\nFrom LWIP help: \"This can be set as low as 1 to get an AutoIP\naddress very quickly, but you should be prepared to handle a\nchanging IP address when DHCP overrides AutoIP.\" (In the case of\nESP-IDF, this means multiple SYSTEM_EVENT_STA_GOT_IP events.)\n", 
                                "name": "LWIP_AUTOIP_TRIES", 
                                "range": [
                                    1, 
                                    100
                                ], 
                                "title": "DHCP Probes before self-assigning IPv4 LL address", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "If the AUTOIP functionality detects this many IP conflicts while\nself-assigning an address, it will go into a rate limited mode.\n", 
                                "name": "LWIP_AUTOIP_MAX_CONFLICTS", 
                                "range": [
                                    1, 
                                    100
                                ], 
                                "title": "Max IP conflicts before rate limiting", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "LWIP_AUTOIP", 
                                "help": "If rate limiting self-assignment requests, wait this long between\neach request.\n", 
                                "name": "LWIP_AUTOIP_RATE_LIMIT_INTERVAL", 
                                "range": [
                                    5, 
                                    120
                                ], 
                                "title": "Rate limited interval (seconds)", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option allows the device to self-assign an address\nin the 169.256/16 range if none is assigned statically or via DHCP.\n\nSee RFC 3927.\n", 
                        "is_menuconfig": true, 
                        "name": "LWIP_AUTOIP", 
                        "range": null, 
                        "title": "Enable IPV4 Link-Local Addressing (AUTOIP)", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "LWIP_NETIF_LOOPBACK", 
                                "help": "Configure the maximum number of packets which can be queued for\nloopback on a given interface. Reducing this number may cause packets\nto be dropped, but will avoid filling memory with queued packet data.\n", 
                                "name": "LWIP_LOOPBACK_MAX_PBUFS", 
                                "range": [
                                    0, 
                                    16
                                ], 
                                "title": "Max queued loopback packets per interface", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enabling this option means that if a packet is sent with a destination\naddress equal to the interface's own IP address, it will \"loop back\" and\nbe received by this interface.\n", 
                        "is_menuconfig": true, 
                        "name": "LWIP_NETIF_LOOPBACK", 
                        "range": null, 
                        "title": "Support per-interface loopback", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously active TCP\nconnections. The practical maximum limit is\ndetermined by available heap memory at runtime.\n\nChanging this value by itself does not substantially\nchange the memory usage of LWIP, except for preventing\nnew TCP connections after the limit is reached.\n", 
                                "name": "LWIP_MAX_ACTIVE_TCP", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum active TCP Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously listening TCP\nconnections. The practical maximum limit is\ndetermined by available heap memory at runtime.\n\nChanging this value by itself does not substantially\nchange the memory usage of LWIP, except for preventing\nnew listening TCP connections after the limit is reached.\n", 
                                "name": "LWIP_MAX_LISTENING_TCP", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum listening TCP Connections", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum number of retransmissions of data segments.\n", 
                                "name": "TCP_MAXRTX", 
                                "range": [
                                    3, 
                                    12
                                ], 
                                "title": "Maximum number of retransmissions of data segments", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum number of retransmissions of SYN segments.\n", 
                                "name": "TCP_SYNMAXRTX", 
                                "range": [
                                    3, 
                                    12
                                ], 
                                "title": "Maximum number of retransmissions of SYN segments", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum segment size for TCP transmission.\n\nCan be set lower to save RAM, the default value 1436 will give best throughput.\n", 
                                "name": "TCP_MSS", 
                                "range": [
                                    1220, 
                                    1436
                                ], 
                                "title": "Maximum Segment Size (MSS)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set maximum segment lifetime in in milliseconds.\n", 
                                "name": "TCP_MSL", 
                                "range": null, 
                                "title": "Maximum segment lifetime (MSL)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set default send buffer size for new TCP sockets.\n\nPer-socket send buffer size can be changed at runtime\nwith lwip_setsockopt(s, TCP_SNDBUF, ...).\n\nThis value must be at least 2x the MSS size, and the default\nis 4x the default MSS size.\n\nSetting a smaller default SNDBUF size can save some RAM, but\nwill decrease performance.\n", 
                                "name": "TCP_SND_BUF_DEFAULT", 
                                "range": [
                                    2440, 
                                    65535
                                ], 
                                "title": "Default send buffer size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set default TCP receive window size for new TCP sockets.\n\nPer-socket receive window size can be changed at runtime\nwith lwip_setsockopt(s, TCP_WINDOW, ...).\n\nSetting a smaller default receive window size can save some RAM,\nbut will significantly decrease performance.\n", 
                                "name": "TCP_WND_DEFAULT", 
                                "range": [
                                    2440, 
                                    65535
                                ], 
                                "title": "Default receive window size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set TCP receive mail box size. Generally bigger value means higher throughput\nbut more memory. The recommended value is: TCP_WND_DEFAULT/TCP_MSS + 2, e.g. if\nTCP_WND_DEFAULT=14360, TCP_MSS=1436, then the recommended receive mail box size is\n(14360/1436 + 2) = 12.\n\nTCP receive mail box is a per socket mail box, when the application receives packets\nfrom TCP socket, LWIP core firstly posts the packets to TCP receive mail box and the\napplication then fetches the packets from mail box. It means LWIP can caches maximum\nTCP_RECCVMBOX_SIZE packets for each TCP socket, so the maximum possible cached TCP packets\nfor all TCP sockets is TCP_RECCVMBOX_SIZE multiples the maximum TCP socket number. In other\nwords, the bigger TCP_RECVMBOX_SIZE means more memory.\nOn the other hand, if the receiv mail box is too small, the mail box may be full. If the\nmail box is full, the LWIP drops the packets. So generally we need to make sure the TCP\nreceive mail box is big enough to avoid packet drop between LWIP core and application.\n", 
                                "name": "TCP_RECVMBOX_SIZE", 
                                "range": [
                                    6, 
                                    64
                                ], 
                                "title": "Default TCP receive mail box size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Queue incoming out-of-order segments for later use.\n\nDisable this option to save some RAM during TCP sessions, at the expense\nof increased retransmissions if segments arrive out of order.\n", 
                                "name": "TCP_QUEUE_OOSEQ", 
                                "range": null, 
                                "title": "Queue incoming out-of-order segments", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "This option is enabled when the following scenario happen:\nnetwork dropped and reconnected, IP changes is like: 192.168.0.2->0.0.0.0->192.168.0.2\n\nDisable this option to keep consistent with the original LWIP code behavior.\n", 
                                "name": "ESP_TCP_KEEP_CONNECTION_WHEN_IP_CHANGES", 
                                "range": null, 
                                "title": "Keep TCP connections when IP changed", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice TCP_OVERSIZE>", 
                                        "help": null, 
                                        "name": "TCP_OVERSIZE_MSS", 
                                        "range": null, 
                                        "title": "MSS", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice TCP_OVERSIZE>", 
                                        "help": null, 
                                        "name": "TCP_OVERSIZE_QUARTER_MSS", 
                                        "range": null, 
                                        "title": "25% MSS", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice TCP_OVERSIZE>", 
                                        "help": null, 
                                        "name": "TCP_OVERSIZE_DISABLE", 
                                        "range": null, 
                                        "title": "Disabled", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "Allows enabling \"oversize\" allocation of TCP transmission pbufs ahead of time,\nwhich can reduce the length of pbuf chains used for transmission.\n\nThis will not make a difference to sockets where Nagle's algorithm\nis disabled.\n\nDefault value of MSS is fine for most applications, 25% MSS may save\nsome RAM when only transmitting small amounts of data. Disabled will\nhave worst performance and fragmentation characteristics, but uses\nleast RAM overall.\n", 
                                "name": "TCP_OVERSIZE", 
                                "title": "Pre-allocate transmit PBUF size", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "TCP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of active UDP \"connections\" (ie\nUDP sockets sending/receiving data).\nThe practical maximum limit is determined by available\nheap memory at runtime.\n", 
                                "name": "LWIP_MAX_UDP_PCBS", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum active UDP control blocks", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Set UDP receive mail box size. The recommended value is 6.\n\nUDP receive mail box is a per socket mail box, when the application receives packets\nfrom UDP socket, LWIP core firstly posts the packets to UDP receive mail box and the\napplication then fetches the packets from mail box. It means LWIP can caches maximum\nUDP_RECCVMBOX_SIZE packets for each UDP socket, so the maximum possible cached UDP packets\nfor all UDP sockets is UDP_RECCVMBOX_SIZE multiples the maximum UDP socket number. In other\nwords, the bigger UDP_RECVMBOX_SIZE means more memory.\nOn the other hand, if the receiv mail box is too small, the mail box may be full. If the\nmail box is full, the LWIP drops the packets. So generally we need to make sure the UDP\nreceive mail box is big enough to avoid packet drop between LWIP core and application.\n", 
                                "name": "UDP_RECVMBOX_SIZE", 
                                "range": [
                                    6, 
                                    64
                                ], 
                                "title": "Default UDP receive mail box size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "UDP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure TCP/IP task stack size, used by LWIP to process multi-threaded TCP/IP operations.\nSetting this stack too small will result in stack overflow crashes.\n", 
                        "name": "TCPIP_TASK_STACK_SIZE", 
                        "range": [
                            2560, 
                            65536
                        ], 
                        "title": "TCP/IP Task Stack Size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable Password Authentication Protocol (PAP) support\n", 
                                "name": "PPP_PAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable PAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable Challenge Handshake Authentication Protocol (CHAP) support\n", 
                                "name": "PPP_CHAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable CHAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable Microsoft version of the Challenge-Handshake Authentication Protocol (MSCHAP) support\n", 
                                "name": "PPP_MSCHAP_SUPPORT", 
                                "range": null, 
                                "title": "Enable MSCHAP support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable Microsoft Point-to-Point Encryption (MPPE) support\n", 
                                "name": "PPP_MPPE_SUPPORT", 
                                "range": null, 
                                "title": "Enable MPPE support", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PPP_SUPPORT", 
                                "help": "Enable PPP debug log output\n", 
                                "name": "PPP_DEBUG_ON", 
                                "range": null, 
                                "title": "Enable PPP debug log output", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable PPP stack. Now only PPP over serial is possible.\n\nPPP over serial support is experimental and unsupported.\n", 
                        "is_menuconfig": true, 
                        "name": "PPP_SUPPORT", 
                        "range": null, 
                        "title": "Enable PPP support (new/experimental)", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "name": "LWIP_MULTICAST_PING", 
                                "range": null, 
                                "title": "Respond to multicast pings", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": null, 
                                "name": "LWIP_BROADCAST_PING", 
                                "range": null, 
                                "title": "Respond to broadcast pings", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "ICMP", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "The maximum number of simultaneously active LWIP\nRAW protocol control blocks. The practical maximum\nlimit is determined by available heap memory at runtime.\n", 
                                "name": "LWIP_MAX_RAW_PCBS", 
                                "range": [
                                    1, 
                                    1024
                                ], 
                                "title": "Maximum LWIP RAW PCBs", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "LWIP RAW API", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "title": "LWIP", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select() related functions might produce an unconveniently lot of\ndebug outputs when one sets the default log level to DEBUG or higher.\nIt is possible to suppress these debug outputs by enabling this\noption.\n", 
                        "name": "SUPPRESS_SELECT_DEBUG_OUTPUT", 
                        "range": null, 
                        "title": "Suppress select() related debug outputs", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "Virtual file system", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Number of DMA receive buffers. Each buffer is 1600 bytes.\nBuffers are allocated statically.\nLarger number of buffers increases throughput.\nIf enable flow ctrl, the num must be above 9 .\n", 
                        "name": "DMA_RX_BUF_NUM", 
                        "range": [
                            3, 
                            20
                        ], 
                        "title": "Number of DMA RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Number of DMA transmit buffers. Each buffer is 1600 bytes.\nBuffers are allocated statically.\nLarger number of buffers increases throughput.\n", 
                        "name": "DMA_TX_BUF_NUM", 
                        "range": [
                            3, 
                            20
                        ], 
                        "title": "Number of DMA TX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this options is selected, a copy of each received buffer will be created when\npassing it from the Ethernet MAC (L2) to the IP stack (L3). Otherwise, IP stack\nwill receive pointers to the DMA buffers used by Ethernet MAC.\n\nWhen Ethernet MAC doesn't have any unused buffers left, it will drop incomming\npackets (flow control may help with this problem, to some extent).\n\nThe buffers for the IP stack are allocated from the heap, so the total number of\nreceive buffers is limited by the available heap size, if this option is selected.\n\nIf unsure, choose n.\n", 
                        "name": "EMAC_L2_TO_L3_RX_BUF_MODE", 
                        "range": null, 
                        "title": "Enable copy between Layer2 and Layer3", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Ethernet MAC task priority.\n", 
                        "name": "EMAC_TASK_PRIORITY", 
                        "range": [
                            3, 
                            22
                        ], 
                        "title": "EMAC_TASK_PRIORITY", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "title": "Ethernet", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The value of 0 indicates the IP lost timer is disabled, otherwise the timer is enabled.\n\nThe IP address may be lost because of some reasons, e.g. when the station disconnects\nfrom soft-AP, or when DHCP IP renew fails etc. If the IP lost timer is enabled, it will\nbe started everytime the IP is lost. Event SYSTEM_EVENT_STA_LOST_IP will be raised if\nthe timer expires. The IP lost timer is stopped if the station get the IP again before\nthe timer expires.\n", 
                        "name": "IP_LOST_TIMER_INTERVAL", 
                        "range": [
                            0, 
                            65535
                        ], 
                        "title": "IP Address lost timer interval (seconds)", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "title": "tcpip adapter", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "AWS_IOT_SDK", 
                        "help": "Default endpoint host name to connect to AWS IoT MQTT/S gateway\n\nThis is the custom endpoint hostname and is specific to an AWS\nIoT account. You can find it by logging into your AWS IoT\nConsole and clicking the Settings button. The endpoint hostname\nis shown under the \"Custom Endpoint\" heading on this page.\n\nIf you need per-device hostnames for different regions or\naccounts, you can override the default hostname in your app.\n", 
                        "name": "AWS_IOT_MQTT_HOST", 
                        "range": null, 
                        "title": "AWS IoT Endpoint Hostname", 
                        "type": "string"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "AWS_IOT_SDK", 
                        "help": "Default port number to connect to AWS IoT MQTT/S gateway\n\nIf you need per-device port numbers for different regions, you can\noverride the default port number in your app.\n", 
                        "name": "AWS_IOT_MQTT_PORT", 
                        "range": [
                            0, 
                            65535
                        ], 
                        "title": "AWS IoT MQTT Port", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "AWS_IOT_SDK", 
                        "help": "Maximum MQTT transmit buffer size. This is the maximum MQTT\nmessage length (including protocol overhead) which can be sent.\n\nSending longer messages will fail.\n", 
                        "name": "AWS_IOT_MQTT_TX_BUF_LEN", 
                        "range": [
                            32, 
                            65536
                        ], 
                        "title": "MQTT TX Buffer Length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "AWS_IOT_SDK", 
                        "help": "Maximum MQTT receive buffer size. This is the maximum MQTT\nmessage length (including protocol overhead) which can be\nreceived.\n\nLonger messages are dropped.\n", 
                        "name": "AWS_IOT_MQTT_RX_BUF_LEN", 
                        "range": [
                            32, 
                            65536
                        ], 
                        "title": "MQTT RX Buffer Length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "AWS_IOT_SDK", 
                        "help": "Maximum number of concurrent MQTT topic filters.\n", 
                        "name": "AWS_IOT_MQTT_NUM_SUBSCRIBE_HANDLERS", 
                        "range": [
                            1, 
                            100
                        ], 
                        "title": "Maximum MQTT Topic Filters", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "AWS_IOT_SDK", 
                        "help": "Initial delay before making first reconnect attempt, if the AWS IoT connection fails.\nClient will perform exponential backoff, starting from this value.\n", 
                        "name": "AWS_IOT_MQTT_MIN_RECONNECT_WAIT_INTERVAL", 
                        "range": [
                            10, 
                            3600000
                        ], 
                        "title": "Auto reconnect initial interval (ms)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "AWS_IOT_SDK", 
                        "help": "Maximum delay between reconnection attempts. If the exponentially increased delay\ninterval reaches this value, the client will stop automatically attempting to reconnect.\n", 
                        "name": "AWS_IOT_MQTT_MAX_RECONNECT_WAIT_INTERVAL", 
                        "range": [
                            10, 
                            3600000
                        ], 
                        "title": "Auto reconnect maximum interval (ms)", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "AWS_IOT_OVERRIDE_THING_SHADOW_RX_BUFFER && AWS_IOT_SDK", 
                                        "help": "Allows setting a different Thing Shadow RX buffer size.\nThis is the maximum size of a Thing Shadow message in bytes,\nplus one.\n", 
                                        "name": "AWS_IOT_SHADOW_MAX_SIZE_OF_RX_BUFFER", 
                                        "range": [
                                            32, 
                                            65536
                                        ], 
                                        "title": "Maximum RX Buffer (bytes)", 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "AWS_IOT_SDK && AWS_IOT_SDK", 
                                "help": "Allows setting a different Thing Shadow RX buffer\nsize. This is the maximum size of a Thing Shadow\nmessage in bytes, plus one.\n\nIf not overridden, the default value is the MQTT RX Buffer length plus one. If overriden, do not set higher than the default value.\n", 
                                "name": "AWS_IOT_OVERRIDE_THING_SHADOW_RX_BUFFER", 
                                "range": null, 
                                "title": "Override Shadow RX buffer size", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "AWS_IOT_SDK && AWS_IOT_SDK", 
                                "help": "Maximum size of the Unique Client Id.\n", 
                                "name": "AWS_IOT_SHADOW_MAX_SIZE_OF_UNIQUE_CLIENT_ID_BYTES", 
                                "range": [
                                    4, 
                                    1000
                                ], 
                                "title": "Maximum unique client ID size (bytes)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "AWS_IOT_SDK && AWS_IOT_SDK", 
                                "help": "At any given time we will wait for this many responses. This will correlate to the rate at which the shadow actions are requested\n", 
                                "name": "AWS_IOT_SHADOW_MAX_SIMULTANEOUS_ACKS", 
                                "range": [
                                    1, 
                                    100
                                ], 
                                "title": "Maximum simultaneous responses", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "AWS_IOT_SDK && AWS_IOT_SDK", 
                                "help": "We could perform shadow action on any thing Name and this is maximum Thing Names we can act on at any given time\n", 
                                "name": "AWS_IOT_SHADOW_MAX_SIMULTANEOUS_THINGNAMES", 
                                "range": [
                                    1, 
                                    100
                                ], 
                                "title": "Maximum simultaneous Thing Name operations", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "AWS_IOT_SDK && AWS_IOT_SDK", 
                                "help": "These are the max tokens that is expected to be in the Shadow JSON document. Includes the metadata which is published\n", 
                                "name": "AWS_IOT_SHADOW_MAX_JSON_TOKEN_EXPECTED", 
                                "range": null, 
                                "title": "Maximum expected JSON tokens", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "AWS_IOT_SDK && AWS_IOT_SDK", 
                                "help": "All shadow actions have to be published or subscribed to a topic which is of the format $aws/things/{thingName}/shadow/update/accepted. This refers to the size of the topic without the Thing Name\n", 
                                "name": "AWS_IOT_SHADOW_MAX_SHADOW_TOPIC_LENGTH_WITHOUT_THINGNAME", 
                                "range": [
                                    10, 
                                    1000
                                ], 
                                "title": "Maximum topic length (not including Thing Name)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "AWS_IOT_SDK && AWS_IOT_SDK", 
                                "help": "Maximum length of a Thing Name.\n", 
                                "name": "AWS_IOT_SHADOW_MAX_SIZE_OF_THING_NAME", 
                                "range": [
                                    4, 
                                    1000
                                ], 
                                "title": "Maximum Thing Name length", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "AWS_IOT_SDK", 
                        "title": "Thing Shadow", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "help": "Select this option to enable support for the AWS IoT platform,\nvia the esp-idf component for the AWS IoT Device C SDK.\n", 
                "is_menuconfig": true, 
                "name": "AWS_IOT_SDK", 
                "range": null, 
                "title": "Amazon Web Services IoT Platform", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_CONTROLLER_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "name": "BTDM_CONTROLLER_PINNED_TO_CORE_0", 
                                        "range": null, 
                                        "title": "Core 0 (PRO CPU)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "!FREERTOS_UNICORE && <choice BTDM_CONTROLLER_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "name": "BTDM_CONTROLLER_PINNED_TO_CORE_1", 
                                        "range": null, 
                                        "title": "Core 1 (APP CPU)", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BT_ENABLED && !FREERTOS_UNICORE", 
                                "help": "Specify the cpu core to run bluetooth controller.\nCan not specify no-affinity.\n", 
                                "name": "BTDM_CONTROLLER_PINNED_TO_CORE_CHOICE", 
                                "title": "The cpu core which bluetooth controller run", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable Bluetooth and show the submenu with Bluetooth configuration choices.\n", 
                        "name": "BT_ENABLED", 
                        "range": null, 
                        "title": "Bluetooth", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "BTDM_CONTROLLER_PINNED_TO_CORE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice BTDM_CONTROLLER_HCI_MODE_CHOICE>", 
                                "help": "Normal option. Mostly, choose this VHCI when bluetooth host run on ESP32, too.\n", 
                                "name": "BTDM_CONTROLLER_HCI_MODE_VHCI", 
                                "range": null, 
                                "title": "VHCI", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice BTDM_CONTROLLER_HCI_MODE_CHOICE>", 
                                "help": "If use external bluetooth host which run on other hardware and use UART as the HCI interface,\nchoose this option.\n", 
                                "name": "BTDM_CONTROLLER_HCI_MODE_UART_H4", 
                                "range": null, 
                                "title": "UART(H4)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "BT_ENABLED", 
                        "help": "Speicify HCI mode as VHCI or UART(H4)\n", 
                        "name": "BTDM_CONTROLLER_HCI_MODE_CHOICE", 
                        "title": "HCI mode", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "BTDM_CONTROLLER_HCI_MODE_UART_H4", 
                                "help": "Uart number for HCI. The available uart is UART1 and UART2.\n", 
                                "name": "BT_HCI_UART_NO", 
                                "range": [
                                    1, 
                                    2
                                ], 
                                "title": "UART Number for HCI", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BTDM_CONTROLLER_HCI_MODE_UART_H4", 
                                "help": "UART Baudrate for HCI. Please use standard baudrate.\n", 
                                "name": "BT_HCI_UART_BAUDRATE", 
                                "range": [
                                    115200, 
                                    921600
                                ], 
                                "title": "UART Baudrate for HCI", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "HCI UART(H4) Options", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTDM_MODEM_SLEEP_MODE>", 
                                                "help": "ORIG mode is a deep sleep mode that can be used for dual mode controller. In this mode, bluetooth controller sleeps between BR/EDR frames and BLE events. A low power clock is used to maintain bluetooth reference clock.\n", 
                                                "name": "BTDM_MODEM_SLEEP_MODE_ORIG", 
                                                "range": null, 
                                                "title": "ORIG Mode(sleep with low power clock)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTDM_MODEM_SLEEP_MODE>", 
                                                "help": "This mode is for BLE only.\n", 
                                                "name": "BTDM_MODEM_SLEEP_MODE_EVED", 
                                                "range": null, 
                                                "title": "EVED Mode ", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BTDM_CONTROLLER_MODEM_SLEEP", 
                                        "help": "To select which strategy to use for modem sleep\n", 
                                        "name": "BTDM_MODEM_SLEEP_MODE", 
                                        "title": "Bluetooth Modem sleep mode", 
                                        "type": "choice"
                                    }
                                ], 
                                "depends_on": "BT_ENABLED", 
                                "help": "Enable/disable bluetooth controller low power mode.\nNote that currently there is problem in the combination use of bluetooth modem sleep and Dynamic Frequency Scaling(DFS). So do not enable DFS if bluetooth modem sleep is in use.\n", 
                                "name": "BTDM_CONTROLLER_MODEM_SLEEP", 
                                "range": null, 
                                "title": "Bluetooth modem sleep", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BTDM_LOW_POWER_CLOCK>", 
                                        "help": null, 
                                        "name": "BTDM_LPCLK_SEL_MAIN_XTAL", 
                                        "range": null, 
                                        "title": "Main crystal", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_CRYSTAL && <choice BTDM_LOW_POWER_CLOCK>", 
                                        "help": null, 
                                        "name": "BTDM_LPCLK_SEL_EXT_32K_XTAL", 
                                        "range": null, 
                                        "title": "External 32kHz crystal", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BTDM_MODEM_SLEEP_MODE_ORIG", 
                                "help": "Select the low power clock source for bluetooth controller\n", 
                                "name": "BTDM_LOW_POWER_CLOCK", 
                                "title": "Bluetooth low power clock", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "MODEM SLEEP Options", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BLUEDROID_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "name": "BLUEDROID_PINNED_TO_CORE_0", 
                                        "range": null, 
                                        "title": "Core 0 (PRO CPU)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "!FREERTOS_UNICORE && <choice BLUEDROID_PINNED_TO_CORE_CHOICE>", 
                                        "help": null, 
                                        "name": "BLUEDROID_PINNED_TO_CORE_1", 
                                        "range": null, 
                                        "title": "Core 1 (APP CPU)", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BLUEDROID_ENABLED && !FREERTOS_UNICORE", 
                                "help": "Which the cpu core to run Bluedroid. Can choose core0 and core1.\nCan not specify no-affinity.\n", 
                                "name": "BLUEDROID_PINNED_TO_CORE_CHOICE", 
                                "title": "The cpu core which Bluedroid run", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": null, 
                                "name": "BLUEDROID_PINNED_TO_CORE", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "This select btc task stack size\n", 
                                "name": "BTC_TASK_STACK_SIZE", 
                                "range": null, 
                                "title": "Bluetooth event (callback to application) task stack size", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "Bluedroid memory debug\n", 
                                "name": "BLUEDROID_MEM_DEBUG", 
                                "range": null, 
                                "title": "Bluedroid memory debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "A2DP_ENABLE", 
                                                "help": null, 
                                                "name": "A2DP_SINK_TASK_STACK_SIZE", 
                                                "range": null, 
                                                "title": "A2DP sink (audio stream decoding) task stack size", 
                                                "type": "int"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "A2DP_ENABLE", 
                                                "help": null, 
                                                "name": "A2DP_SOURCE_TASK_STACK_SIZE", 
                                                "range": null, 
                                                "title": "A2DP source (audio stream encoding) task stack size", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "CLASSIC_BT_ENABLED", 
                                        "help": "Advanced Audio Distrubution Profile\n", 
                                        "name": "A2DP_ENABLE", 
                                        "range": null, 
                                        "title": "A2DP", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "CLASSIC_BT_ENABLED", 
                                        "help": "This enables the Serial Port Profile\n", 
                                        "name": "BT_SPP_ENABLED", 
                                        "range": null, 
                                        "title": "SPP", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice HFP_ROLE>", 
                                                        "help": null, 
                                                        "name": "HFP_CLIENT_ENABLE", 
                                                        "range": null, 
                                                        "title": "Hands Free Unit", 
                                                        "type": "bool"
                                                    }
                                                ], 
                                                "depends_on": "HFP_ENABLE", 
                                                "help": null, 
                                                "name": "HFP_ROLE", 
                                                "title": "Hands-free Profile Role configuration", 
                                                "type": "choice"
                                            }, 
                                            {
                                                "children": [
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice HFP_AUDIO_DATA_PATH>", 
                                                        "help": "This enables the Serial Port Profile\n", 
                                                        "name": "HFP_AUDIO_DATA_PATH_PCM", 
                                                        "range": null, 
                                                        "title": "PCM", 
                                                        "type": "bool"
                                                    }, 
                                                    {
                                                        "children": [], 
                                                        "depends_on": "<choice HFP_AUDIO_DATA_PATH>", 
                                                        "help": "This enables the Serial Port Profile\n", 
                                                        "name": "HFP_AUDIO_DATA_PATH_HCI", 
                                                        "range": null, 
                                                        "title": "HCI", 
                                                        "type": "bool"
                                                    }
                                                ], 
                                                "depends_on": "HFP_ENABLE", 
                                                "help": null, 
                                                "name": "HFP_AUDIO_DATA_PATH", 
                                                "title": "audio(SCO) data path", 
                                                "type": "choice"
                                            }
                                        ], 
                                        "depends_on": "CLASSIC_BT_ENABLED", 
                                        "help": null, 
                                        "name": "HFP_ENABLE", 
                                        "range": null, 
                                        "title": "Hands Free/Handset Profile", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "For now this option needs \"SMP_ENABLE\" to be set to yes\n", 
                                "name": "CLASSIC_BT_ENABLED", 
                                "range": null, 
                                "title": "Classic Bluetooth", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "This option can be disabled when the app work only on gatt client mode\n", 
                                "name": "GATTS_ENABLE", 
                                "range": null, 
                                "title": "Include GATT server module(GATTS)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "GATTC_ENABLE", 
                                        "help": "This select can save gattc cache data to nvs flash\n", 
                                        "name": "GATTC_CACHE_NVS_FLASH", 
                                        "range": null, 
                                        "title": "Save gattc cache data to nvs flash", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "This option can be close when the app work only on gatt server mode\n", 
                                "name": "GATTC_ENABLE", 
                                "range": null, 
                                "title": "Include GATT client module(GATTC)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "This option can be close when the app not used the ble security connect.\n", 
                                "name": "BLE_SMP_ENABLE", 
                                "range": null, 
                                "title": "Include BLE security module(SMP)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "This select can save the rodata code size\n", 
                                "name": "BT_STACK_NO_LOG", 
                                "range": null, 
                                "title": "Disable BT debug logs (minimize bin size)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HCI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HCI_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HCI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HCI_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HCI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HCI_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HCI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HCI_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HCI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HCI_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HCI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HCI_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HCI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HCI_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for HCI layer\n", 
                                        "name": "HCI_INITIAL_TRACE_LEVEL", 
                                        "title": "HCI layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "HCI_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTM_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTM_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTM_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTM_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTM_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTM_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTM_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BTM layer\n", 
                                        "name": "BTM_INITIAL_TRACE_LEVEL", 
                                        "title": "BTM layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "BTM_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice L2CAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "L2CAP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice L2CAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "L2CAP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice L2CAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "L2CAP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice L2CAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "L2CAP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice L2CAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "L2CAP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice L2CAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "L2CAP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice L2CAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "L2CAP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for L2CAP layer\n", 
                                        "name": "L2CAP_INITIAL_TRACE_LEVEL", 
                                        "title": "L2CAP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "L2CAP_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice RFCOMM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "RFCOMM_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice RFCOMM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "RFCOMM_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice RFCOMM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "RFCOMM_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice RFCOMM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "RFCOMM_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice RFCOMM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "RFCOMM_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice RFCOMM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "RFCOMM_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice RFCOMM_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "RFCOMM_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for RFCOMM layer\n", 
                                        "name": "RFCOMM_INITIAL_TRACE_LEVEL", 
                                        "title": "RFCOMM layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "RFCOMM_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SDP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SDP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SDP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SDP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SDP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SDP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SDP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SDP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SDP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SDP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SDP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SDP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SDP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SDP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for SDP layer\n", 
                                        "name": "SDP_INITIAL_TRACE_LEVEL", 
                                        "title": "SDP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "SDP_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GAP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GAP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GAP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GAP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GAP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GAP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GAP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GAP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for GAP layer\n", 
                                        "name": "GAP_INITIAL_TRACE_LEVEL", 
                                        "title": "GAP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "GAP_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BNEP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BNEP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BNEP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BNEP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BNEP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BNEP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BNEP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BNEP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BNEP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BNEP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BNEP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BNEP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BNEP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BNEP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BNEP layer\n", 
                                        "name": "BNEP_INITIAL_TRACE_LEVEL", 
                                        "title": "BNEP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "BNEP_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice PAN_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "PAN_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice PAN_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "PAN_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice PAN_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "PAN_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice PAN_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "PAN_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice PAN_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "PAN_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice PAN_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "PAN_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice PAN_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "PAN_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for PAN layer\n", 
                                        "name": "PAN_INITIAL_TRACE_LEVEL", 
                                        "title": "PAN layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "PAN_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice A2D_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "A2D_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice A2D_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "A2D_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice A2D_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "A2D_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice A2D_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "A2D_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice A2D_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "A2D_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice A2D_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "A2D_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice A2D_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "A2D_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for A2D layer\n", 
                                        "name": "A2D_INITIAL_TRACE_LEVEL", 
                                        "title": "A2D layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "A2D_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVDT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVDT_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVDT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVDT_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVDT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVDT_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVDT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVDT_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVDT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVDT_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVDT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVDT_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVDT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVDT_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for AVDT layer\n", 
                                        "name": "AVDT_INITIAL_TRACE_LEVEL", 
                                        "title": "AVDT layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "AVDT_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVCT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVCT_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVCT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVCT_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVCT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVCT_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVCT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVCT_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVCT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVCT_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVCT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVCT_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVCT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVCT_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for AVCT layer\n", 
                                        "name": "AVCT_INITIAL_TRACE_LEVEL", 
                                        "title": "AVCT layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "AVCT_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVRC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVRC_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVRC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVRC_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVRC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVRC_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVRC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVRC_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVRC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVRC_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVRC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVRC_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice AVRC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "AVRC_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for AVRC layer\n", 
                                        "name": "AVRC_INITIAL_TRACE_LEVEL", 
                                        "title": "AVRC layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "AVRC_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice MCA_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "MCA_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice MCA_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "MCA_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice MCA_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "MCA_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice MCA_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "MCA_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice MCA_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "MCA_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice MCA_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "MCA_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice MCA_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "MCA_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for MCA layer\n", 
                                        "name": "MCA_INITIAL_TRACE_LEVEL", 
                                        "title": "MCA layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "MCA_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HID_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HID_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HID_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HID_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HID_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HID_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HID_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HID_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HID_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HID_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HID_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HID_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice HID_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "HID_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for HID layer\n", 
                                        "name": "HID_INITIAL_TRACE_LEVEL", 
                                        "title": "HID layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "HID_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice APPL_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "APPL_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice APPL_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "APPL_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice APPL_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "APPL_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice APPL_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "APPL_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice APPL_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "APPL_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice APPL_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "APPL_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice APPL_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "APPL_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for APPL layer\n", 
                                        "name": "APPL_INITIAL_TRACE_LEVEL", 
                                        "title": "APPL layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "APPL_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GATT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GATT_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GATT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GATT_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GATT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GATT_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GATT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GATT_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GATT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GATT_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GATT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GATT_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice GATT_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "GATT_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for GATT layer\n", 
                                        "name": "GATT_INITIAL_TRACE_LEVEL", 
                                        "title": "GATT layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "GATT_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SMP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SMP_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SMP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SMP_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SMP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SMP_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SMP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SMP_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SMP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SMP_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SMP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SMP_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SMP_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "SMP_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for SMP layer\n", 
                                        "name": "SMP_INITIAL_TRACE_LEVEL", 
                                        "title": "SMP layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "SMP_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTIF_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTIF_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTIF_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTIF_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTIF_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTIF_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTIF_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTIF_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTIF_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTIF_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTIF_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTIF_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTIF_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTIF_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BTIF layer\n", 
                                        "name": "BTIF_INITIAL_TRACE_LEVEL", 
                                        "title": "BTIF layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "BTIF_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTC_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTC_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTC_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTC_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTC_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTC_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BTC_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BTC_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BTC layer\n", 
                                        "name": "BTC_INITIAL_TRACE_LEVEL", 
                                        "title": "BTC layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "BTC_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice OSI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "OSI_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice OSI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "OSI_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice OSI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "OSI_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice OSI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "OSI_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice OSI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "OSI_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice OSI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "OSI_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice OSI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "OSI_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for OSI layer\n", 
                                        "name": "OSI_INITIAL_TRACE_LEVEL", 
                                        "title": "OSI layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "OSI_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BLUFI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BLUFI_TRACE_LEVEL_NONE", 
                                                "range": null, 
                                                "title": "NONE", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BLUFI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BLUFI_TRACE_LEVEL_ERROR", 
                                                "range": null, 
                                                "title": "ERROR", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BLUFI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BLUFI_TRACE_LEVEL_WARNING", 
                                                "range": null, 
                                                "title": "WARNING", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BLUFI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BLUFI_TRACE_LEVEL_API", 
                                                "range": null, 
                                                "title": "API", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BLUFI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BLUFI_TRACE_LEVEL_EVENT", 
                                                "range": null, 
                                                "title": "EVENT", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BLUFI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BLUFI_TRACE_LEVEL_DEBUG", 
                                                "range": null, 
                                                "title": "DEBUG", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice BLUFI_INITIAL_TRACE_LEVEL>", 
                                                "help": null, 
                                                "name": "BLUFI_TRACE_LEVEL_VERBOSE", 
                                                "range": null, 
                                                "title": "VERBOSE", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": "Define BT trace level for BLUFI layer\n", 
                                        "name": "BLUFI_INITIAL_TRACE_LEVEL", 
                                        "title": "BLUFI layer", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "BLUEDROID_ENABLED && BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                        "help": null, 
                                        "name": "BLUFI_INITIAL_TRACE_LEVEL", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }
                                ], 
                                "depends_on": "BLUEDROID_ENABLED && !BT_STACK_NO_LOG", 
                                "title": "BT DEBUG LOG LEVEL", 
                                "type": "menu"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "Maximum BT/BLE connection count\n", 
                                "name": "BT_ACL_CONNECTIONS", 
                                "range": [
                                    1, 
                                    7
                                ], 
                                "title": "BT/BLE MAX ACL CONNECTIONS(1~7)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "This select can save the internal RAM if there have the PSRAM\n", 
                                "name": "BT_ALLOCATION_FROM_SPIRAM_FIRST", 
                                "range": null, 
                                "title": "BT/BLE will first malloc the memory from the PSRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "This select can make the allocation of memory will become more flexible\n", 
                                "name": "BT_BLE_DYNAMIC_ENV_MEMORY", 
                                "range": null, 
                                "title": "Use dynamic memory allocation in BT/BLE stack", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "When scanning and scan duplicate is not enabled, if there are a lot of adv packets around or application layer\nhandling adv packets is slow, it will cause the controller memory to run out. if enabled, adv packets will be\nlost when host queue is congested.\n", 
                                "name": "BLE_HOST_QUEUE_CONGESTION_CHECK", 
                                "range": null, 
                                "title": "BLE queue congestion check", 
                                "type": "bool"
                            }, 
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "BLE_SCAN_DUPLICATE", 
                                        "help": "Maximum number of devices which can be recorded in scan duplicate filter.\nWhen the maximum amount of device in the filter is reached, the cache will be refreshed.\n", 
                                        "name": "DUPLICATE_SCAN_CACHE_SIZE", 
                                        "range": [
                                            10, 
                                            1000
                                        ], 
                                        "title": "Maximum number of devices in scan duplicate filter", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "BLE_MESH_SCAN_DUPLICATE_EN", 
                                                "help": "Maximum number of adv packets which can be recorded in duplicate scan cache for BLE Mesh.\nWhen the maximum amount of device in the filter is reached, the cache will be refreshed.\n", 
                                                "name": "MESH_DUPLICATE_SCAN_CACHE_SIZE", 
                                                "range": [
                                                    10, 
                                                    1000
                                                ], 
                                                "title": "Maximum number of Mesh adv packets in scan duplicate filter", 
                                                "type": "int"
                                            }
                                        ], 
                                        "depends_on": "BLE_SCAN_DUPLICATE", 
                                        "help": "This enables the BLE scan duplicate for special BLE Mesh scan.\n", 
                                        "name": "BLE_MESH_SCAN_DUPLICATE_EN", 
                                        "range": null, 
                                        "title": "Special duplicate scan mechanism for BLE Mesh scan", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": "This select enables parameters setting of BLE scan duplicate.\n", 
                                "name": "BLE_SCAN_DUPLICATE", 
                                "range": null, 
                                "title": "BLE Scan Duplicate Options", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "BLUEDROID_ENABLED", 
                                "help": null, 
                                "name": "SMP_ENABLE", 
                                "range": null, 
                                "title": null, 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "BTDM_CONTROLLER_HCI_MODE_VHCI", 
                        "help": "This enables the default Bluedroid Bluetooth stack\n", 
                        "is_menuconfig": true, 
                        "name": "BLUEDROID_ENABLED", 
                        "range": null, 
                        "title": "Bluedroid Enable", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "BT_RESERVE_DRAM", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }
                ], 
                "depends_on": null, 
                "title": "Bluetooth", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When enabled, blobs larger than the sector size are split and stored on multiple sectors.\nThis removes the earlier limitation of 1984 bytes for storing data-blobs.\n", 
                        "name": "MP_BLOB_SUPPORT", 
                        "range": null, 
                        "title": "Enable multi-page blob support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "FLASH_ENCRYPTION_ENABLED", 
                        "help": "This option enables encryption for NVS. When enabled, AES-XTS is used to encrypt\nthe complete NVS data, except the page headers. It requires XTS encryption keys\nto be stored in an encrypted partition. This means enabling flash encryption is\na pre-requisite for this feature.\n", 
                        "name": "NVS_ENCRYPTION", 
                        "range": null, 
                        "title": "Enable NVS encryption", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "NVS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "ADC power can be controlled by the FSM instead of software. This allows the ADC to\nbe shut off when it is not working leading to lower power consumption. However\nusing the FSM control ADC power will increase the noise of ADC.\n", 
                                "name": "ADC_FORCE_XPD_FSM", 
                                "range": null, 
                                "title": "Use the FSM to control ADC power", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "If this is set, the ADC2 driver will disables the output of the DAC corresponding to the specified channel. This is the default value.\n\nFor testing, disable this option so that we can measure the output of DAC by internal ADC.\n", 
                                "name": "ADC2_DISABLE_DAC", 
                                "range": null, 
                                "title": "Disable DAC when ADC2 is used on GPIO 25 and 26", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "ADC configuration", 
                        "type": "menu"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Normally only the ISR of SPI master is placed in the IRAM, so that it\ncan work without the flash when interrupt is triggered.\nFor other functions, there's some possibility that the flash cache\nmiss when running inside and out of SPI functions, which may increase\nthe interval of SPI transactions.\nEnable this to put ``queue_trans``, ``get_trans_result`` and\n``transmit`` functions into the IRAM to avoid possible cache miss.\n\nDuring unit test, this is enabled to measure the ideal case of api.\n", 
                                "name": "SPI_MASTER_IN_IRAM", 
                                "range": null, 
                                "title": "Place transmitting functions of SPI master into IRAM", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Place the SPI master ISR in to IRAM to avoid possible cache miss.\n\nAlso you can forbid the ISR being disabled during flash writing\naccess, by add ESP_INTR_FLAG_IRAM when initializing the driver.\n", 
                                "name": "SPI_MASTER_ISR_IN_IRAM", 
                                "range": null, 
                                "title": "Place SPI master ISR function into IRAM", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "SPI master configuration", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "title": "Driver configurations", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "name": "ESP32_DEFAULT_CPU_FREQ_80", 
                                "range": null, 
                                "title": "80 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "name": "ESP32_DEFAULT_CPU_FREQ_160", 
                                "range": null, 
                                "title": "160 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_DEFAULT_CPU_FREQ_MHZ>", 
                                "help": null, 
                                "name": "ESP32_DEFAULT_CPU_FREQ_240", 
                                "range": null, 
                                "title": "240 MHz", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "CPU frequency to be set on application startup.\n", 
                        "name": "ESP32_DEFAULT_CPU_FREQ_MHZ", 
                        "title": "CPU frequency", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "ESP32_DEFAULT_CPU_FREQ_MHZ", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "SPIRAM_BOOT_INIT && SPIRAM_SUPPORT", 
                                                "help": "Normally, if psram initialization is enabled during compile time but not found at runtime, it\nis seen as an error making the ESP32 panic. If this is enabled, the ESP32 will keep on\nrunning but will not add the (non-existing) RAM to any allocator.\n", 
                                                "name": "SPIRAM_IGNORE_NOTFOUND", 
                                                "range": null, 
                                                "title": "Ignore PSRAM when not found", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": "If this is enabled, the SPI RAM will be enabled during initial boot. Unless you\nhave specific requirements, you'll want to leave this enabled so memory allocated\nduring boot-up can also be placed in SPI RAM.\n", 
                                        "name": "SPIRAM_BOOT_INIT", 
                                        "range": null, 
                                        "title": "Initialize SPI RAM when booting the ESP32", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "name": "SPIRAM_USE_MEMMAP", 
                                                "range": null, 
                                                "title": "Integrate RAM into ESP32 memory map", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "name": "SPIRAM_USE_CAPS_ALLOC", 
                                                "range": null, 
                                                "title": "Make RAM allocatable using heap_caps_malloc(..., MALLOC_CAP_SPIRAM)", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_USE>", 
                                                "help": null, 
                                                "name": "SPIRAM_USE_MALLOC", 
                                                "range": null, 
                                                "title": "Make RAM allocatable using malloc() as well", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": "The SPI RAM can be accessed in multiple methods: by just having it available as an unmanaged\nmemory region in the ESP32 memory map, by integrating it in the ESP32s heap as 'special' memory\nneeding heap_caps_malloc to allocate, or by fully integrating it making malloc() also able to\nreturn SPI RAM pointers.\n", 
                                        "name": "SPIRAM_USE", 
                                        "title": "SPI RAM access method", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_TYPE>", 
                                                "help": null, 
                                                "name": "SPIRAM_TYPE_ESPPSRAM32", 
                                                "range": null, 
                                                "title": "ESP-PSRAM32 or IS25WP032", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": null, 
                                        "name": "SPIRAM_TYPE", 
                                        "title": "Type of SPI RAM chip in use", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": null, 
                                        "name": "SPIRAM_SIZE", 
                                        "range": null, 
                                        "title": null, 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [
                                            {
                                                "children": [], 
                                                "depends_on": "<choice SPIRAM_SPEED>", 
                                                "help": null, 
                                                "name": "SPIRAM_SPEED_40M", 
                                                "range": null, 
                                                "title": "40MHz clock speed", 
                                                "type": "bool"
                                            }, 
                                            {
                                                "children": [], 
                                                "depends_on": "ESPTOOLPY_FLASHFREQ_80M && <choice SPIRAM_SPEED>", 
                                                "help": null, 
                                                "name": "SPIRAM_SPEED_80M", 
                                                "range": null, 
                                                "title": "80MHz clock speed", 
                                                "type": "bool"
                                            }
                                        ], 
                                        "depends_on": "SPIRAM_SUPPORT", 
                                        "help": "Select the speed for the SPI RAM chip.\nIf SPI RAM is enabled, we only support three combinations of SPI speed mode we supported now:\n\n1. Flash SPI running at 40Mhz and RAM SPI running at 40Mhz\n2. Flash SPI running at 80Mhz and RAM SPI running at 40Mhz\n3. Flash SPI running at 80Mhz and RAM SPI running at 80Mhz\n\n   Note: If the third mode(80Mhz+80Mhz) is enabled, the VSPI port will be occupied by the system.\n         Application code should never touch VSPI hardware in this case. The option to select\n         80MHz will only be visible if the flash SPI speed is also 80MHz. (ESPTOOLPY_FLASHFREQ_80M is true)\n", 
                                        "name": "SPIRAM_SPEED", 
                                        "title": "Set RAM clock speed", 
                                        "type": "choice"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_BOOT_INIT && SPIRAM_SUPPORT", 
                                        "help": "Runs a rudimentary memory test on initialization. Aborts when memory test fails. Disable this for\nslightly faster startop.\n", 
                                        "name": "SPIRAM_MEMTEST", 
                                        "range": null, 
                                        "title": "Run memory test on SPI RAM initialization", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "(SPIRAM_USE_MEMMAP || SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && SPIRAM_SUPPORT", 
                                        "help": "Revision 1 of the ESP32 has a bug that can cause a write to PSRAM not to take place in some situations\nwhen the cache line needs to be fetched from external RAM and an interrupt occurs. This enables a\nfix in the compiler that makes sure the specific code that is vulnerable to this will not be emitted.\n\nThis will also not use any bits of newlib that are located in ROM, opting for a version that is compiled\nwith the workaround and located in flash instead.\n", 
                                        "name": "SPIRAM_CACHE_WORKAROUND", 
                                        "range": null, 
                                        "title": "Enable workaround for bug in SPI RAM cache for Rev1 ESP32s", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && SPIRAM_SUPPORT", 
                                        "help": "If malloc() is capable of also allocating SPI-connected ram, its allocation strategy will prefer to allocate chunks less\nthan this size in internal memory, while allocations larger than this will be done from external RAM.\nIf allocation from the preferred region fails, an attempt is made to allocate from the non-preferred\nregion instead, so malloc() will not suddenly fail when either internal or external memory is full.\n", 
                                        "name": "SPIRAM_MALLOC_ALWAYSINTERNAL", 
                                        "range": [
                                            0, 
                                            131072
                                        ], 
                                        "title": "Maximum malloc() size, in bytes, to always put in internal memory", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "(SPIRAM_USE_CAPS_ALLOC || SPIRAM_USE_MALLOC) && SPIRAM_SUPPORT", 
                                        "help": "Try to allocate memories of WiFi and LWIP in SPIRAM firstly. If failed, try to allocate internal memory then.\n", 
                                        "name": "WIFI_LWIP_ALLOCATION_FROM_SPIRAM_FIRST", 
                                        "range": null, 
                                        "title": "Try to allocate memories of WiFi and LWIP in SPIRAM firstly. If failed, allocate internal memory", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && SPIRAM_SUPPORT", 
                                        "help": "Because the external/internal RAM allocation strategy is not always perfect, it sometimes may happen\nthat the internal memory is entirely filled up. This causes allocations that are specifically done in\ninternal memory, for example the stack for new tasks or memory to service DMA or have memory that's\nalso available when SPI cache is down, to fail. This option reserves a pool specifically for requests\nlike that; the memory in this pool is not given out when a normal malloc() is called.\n\nSet this to 0 to disable this feature.\n\nNote that because FreeRTOS stacks are forced to internal memory, they will also use this memory pool;\nbe sure to keep this in mind when adjusting this value.\n", 
                                        "name": "SPIRAM_MALLOC_RESERVE_INTERNAL", 
                                        "range": [
                                            0, 
                                            131072
                                        ], 
                                        "title": "Reserve this amount of bytes for data that specifically needs to be in DMA or internal memory", 
                                        "type": "int"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIRAM_USE_MALLOC && SPIRAM_SUPPORT", 
                                        "help": "Because some bits of the ESP32 code environment cannot be recompiled with the cache workaround, normally\ntasks cannot be safely run with their stack residing in external memory; for this reason xTaskCreate and\nfriends always allocate stack in internal memory and xTaskCreateStatic will check if the memory passed\nto it is in internal memory. If you have a task that needs a large amount of stack and does not call on\nROM code in any way (no direct calls, but also no Bluetooth/WiFi), you can try to disable this and use\nxTaskCreateStatic to create the tasks stack in external memory.\n", 
                                        "name": "SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY", 
                                        "range": null, 
                                        "title": "Allow external memory as an argument to xTaskCreateStatic", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "SPIRAM_SUPPORT", 
                                "title": "SPI RAM config", 
                                "type": "menu"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This enables support for an external SPI RAM chip, connected in parallel with the\nmain SPI flash chip.\n", 
                        "name": "SPIRAM_SUPPORT", 
                        "range": null, 
                        "title": "Support for external, SPI-connected RAM", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "MEMMAP_TRACEMEM", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "MEMMAP_TRACEMEM_TWOBANKS", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_TRAX && !FREERTOS_UNICORE", 
                                "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.\n", 
                                "name": "ESP32_TRAX_TWOBANKS", 
                                "range": null, 
                                "title": "Reserve memory for tracing both pro as well as app cpu execution", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The ESP32 contains a feature which allows you to trace the execution path the processor\nhas taken through the program. This is stored in a chunk of 32K (16K for single-processor)\nof memory that can't be used for general purposes anymore. Disable this if you do not know\nwhat this is.\n", 
                        "name": "ESP32_TRAX", 
                        "range": null, 
                        "title": "Use TRAX tracing feature", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "TRACEMEM_RESERVE_DRAM", 
                        "range": null, 
                        "title": null, 
                        "type": "hex"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "name": "ESP32_ENABLE_COREDUMP_TO_FLASH", 
                                "range": null, 
                                "title": "Flash", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "name": "ESP32_ENABLE_COREDUMP_TO_UART", 
                                "range": null, 
                                "title": "UART", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_COREDUMP_TO_FLASH_OR_UART>", 
                                "help": null, 
                                "name": "ESP32_ENABLE_COREDUMP_TO_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select place to store core dump: flash, uart or none (to disable core dumps generation).\n\nIf core dump is configured to be stored in flash and custom partition table is used add\ncorresponding entry to your CSV. For examples, please see predefined partition table CSV descriptions\nin the components/partition_table directory.\n", 
                        "name": "ESP32_COREDUMP_TO_FLASH_OR_UART", 
                        "title": "Core dump destination", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enables/disable core dump module.\n", 
                        "name": "ESP32_ENABLE_COREDUMP", 
                        "range": null, 
                        "title": null, 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_ENABLE_COREDUMP_TO_UART", 
                        "help": "Config delay (in ms) before printing core dump to UART.\nDelay can be interrupted by pressing Enter key.\n", 
                        "name": "ESP32_CORE_DUMP_UART_DELAY", 
                        "range": null, 
                        "title": "Core dump print to UART delay", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_ENABLE_COREDUMP", 
                        "help": "Config core dump module logging level (0-5).\n", 
                        "name": "ESP32_CORE_DUMP_LOG_LEVEL", 
                        "range": null, 
                        "title": "Core dump module logging level", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NUMBER_OF_UNIVERSAL_MAC_ADDRESS>", 
                                "help": null, 
                                "name": "TWO_UNIVERSAL_MAC_ADDRESS", 
                                "range": null, 
                                "title": "Two", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NUMBER_OF_UNIVERSAL_MAC_ADDRESS>", 
                                "help": null, 
                                "name": "FOUR_UNIVERSAL_MAC_ADDRESS", 
                                "range": null, 
                                "title": "Four", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Configure the number of universally administered (by IEEE) MAC addresses.\nDuring initialisation, MAC addresses for each network interface are generated or derived from a\nsingle base MAC address.\nIf the number of universal MAC addresses is four, all four interfaces (WiFi station, WiFi softap,\nBluetooth and Ethernet) receive a universally administered MAC address. These are generated\nsequentially by adding 0, 1, 2 and 3 (respectively) to the final octet of the base MAC address.\nIf the number of universal MAC addresses is two, only two interfaces (WiFi station and Bluetooth)\nreceive a universally administered MAC address. These are generated sequentially by adding 0\nand 1 (respectively) to the base MAC address. The remaining two interfaces (WiFi softap and Ethernet)\nreceive local MAC addresses. These are derived from the universal WiFi station and Bluetooth MAC\naddresses, respectively.\nWhen using the default (Espressif-assigned) base MAC address, either setting can be used. When using\na custom universal MAC address range, the correct setting will depend on the allocation of MAC\naddresses in this range (either 2 or 4 per device.)\n", 
                        "name": "NUMBER_OF_UNIVERSAL_MAC_ADDRESS", 
                        "title": "Number of universally administered (by IEEE) MAC address", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "NUMBER_OF_UNIVERSAL_MAC_ADDRESS", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Config system event queue size in different application.\n", 
                        "name": "SYSTEM_EVENT_QUEUE_SIZE", 
                        "range": null, 
                        "title": "System event queue size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Config system event task stack size in different application.\n", 
                        "name": "SYSTEM_EVENT_TASK_STACK_SIZE", 
                        "range": null, 
                        "title": "Event loop task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the \"main task\" stack size. This is the stack of the task\nwhich calls app_main(). If app_main() returns then this task is deleted\nand its stack memory is freed.\n", 
                        "name": "MAIN_TASK_STACK_SIZE", 
                        "range": null, 
                        "title": "Main task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the IPC tasks stack size. One IPC task runs on each core\n(in dual core mode), and allows for cross-core function calls.\n\nSee IPC documentation for more details.\n\nThe default stack size should be enough for most common use cases.\nIt can be shrunk if you are sure that you do not use any custom\nIPC functionality.\n", 
                        "name": "IPC_TASK_STACK_SIZE", 
                        "range": [
                            2048, 
                            65536
                        ], 
                        "title": "Inter-Processor Call (IPC) task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Configure the stack size of esp_timer/ets_timer task. This task is used\nto dispatch callbacks of timers created using ets_timer and esp_timer\nAPIs. If you are seing stack overflow errors in timer task, increase\nthis value.\n\nNote that this is not the same as FreeRTOS timer task. To configure\nFreeRTOS timer task size, see \"FreeRTOS timer task stack size\" option\nin \"FreeRTOS\" menu.\n", 
                        "name": "TIMER_TASK_STACK_SIZE", 
                        "range": [
                            2048, 
                            65536
                        ], 
                        "title": "High-resolution timer task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_CRLF", 
                                "range": null, 
                                "title": "CRLF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_LF", 
                                "range": null, 
                                "title": "LF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDOUT_LINE_ENDING>", 
                                "help": null, 
                                "name": "NEWLIB_STDOUT_LINE_ENDING_CR", 
                                "range": null, 
                                "title": "CR", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This option allows configuring the desired line endings sent to UART\nwhen a newline ('\\n', LF) appears on stdout.\nThree options are possible:\n\nCRLF: whenever LF is encountered, prepend it with CR\n\nLF: no modification is applied, stdout is sent as is\n\nCR: each occurence of LF is replaced with CR\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).\n", 
                        "name": "NEWLIB_STDOUT_LINE_ENDING", 
                        "title": "Line ending for UART output", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "name": "NEWLIB_STDIN_LINE_ENDING_CRLF", 
                                "range": null, 
                                "title": "CRLF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "name": "NEWLIB_STDIN_LINE_ENDING_LF", 
                                "range": null, 
                                "title": "LF", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice NEWLIB_STDIN_LINE_ENDING>", 
                                "help": null, 
                                "name": "NEWLIB_STDIN_LINE_ENDING_CR", 
                                "range": null, 
                                "title": "CR", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This option allows configuring which input sequence on UART produces\na newline ('\\n', LF) on stdin.\nThree options are possible:\n\nCRLF: CRLF is converted to LF\n\nLF: no modification is applied, input is sent to stdin as is\n\nCR: each occurence of CR is replaced with LF\n\nThis option doesn't affect behavior of the UART driver (drivers/uart.h).\n", 
                        "name": "NEWLIB_STDIN_LINE_ENDING", 
                        "title": "Line ending for UART input", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "ESP32 ROM contains parts of newlib C library, including printf/scanf family\nof functions. These functions have been compiled with so-called \"nano\"\nformatting option. This option doesn't support 64-bit integer formats and C99\nfeatures, such as positional arguments.\n\nFor more details about \"nano\" formatting option, please see newlib readme file,\nsearch for '--enable-newlib-nano-formatted-io':\nhttps://sourceware.org/newlib/README\n\nIf this option is enabled, build system will use functions available in\nROM, reducing the application binary size. Functions available in ROM run\nfaster than functions which run from flash. Functions available in ROM can\nalso run when flash instruction cache is disabled.\n\nIf you need 64-bit integer formatting support or C99 features, keep this\noption disabled.\n", 
                        "name": "NEWLIB_NANO_FORMAT", 
                        "range": null, 
                        "title": "Enable 'nano' formatting options for printf/scanf family", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART>", 
                                "help": null, 
                                "name": "CONSOLE_UART_DEFAULT", 
                                "range": null, 
                                "title": "Default: UART0, TX=GPIO1, RX=GPIO3", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART>", 
                                "help": null, 
                                "name": "CONSOLE_UART_CUSTOM", 
                                "range": null, 
                                "title": "Custom", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART>", 
                                "help": null, 
                                "name": "CONSOLE_UART_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select whether to use UART for console output (through stdout and stderr).\n\n- Default is to use UART0 on pins GPIO1(TX) and GPIO3(RX).\n- If \"Custom\" is selected, UART0 or UART1 can be chosen,\n  and any pins can be selected.\n- If \"None\" is selected, there will be no console output on any UART, except\n  for initial output from ROM bootloader. This output can be further suppressed by\n  bootstrapping GPIO13 pin to low logic level.\n", 
                        "name": "CONSOLE_UART", 
                        "title": "UART for console output", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART_NUM>", 
                                "help": null, 
                                "name": "CONSOLE_UART_CUSTOM_NUM_0", 
                                "range": null, 
                                "title": "UART0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice CONSOLE_UART_NUM>", 
                                "help": null, 
                                "name": "CONSOLE_UART_CUSTOM_NUM_1", 
                                "range": null, 
                                "title": "UART1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "CONSOLE_UART_CUSTOM", 
                        "help": "Due of a ROM bug, UART2 is not supported for console output\nvia ets_printf.\n", 
                        "name": "CONSOLE_UART_NUM", 
                        "title": "UART peripheral to use for console output (0-1)", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "CONSOLE_UART_NUM", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "CONSOLE_UART_CUSTOM", 
                        "help": null, 
                        "name": "CONSOLE_UART_TX_GPIO", 
                        "range": [
                            0, 
                            33
                        ], 
                        "title": "UART TX on GPIO#", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "CONSOLE_UART_CUSTOM", 
                        "help": null, 
                        "name": "CONSOLE_UART_RX_GPIO", 
                        "range": [
                            0, 
                            39
                        ], 
                        "title": "UART RX on GPIO#", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!CONSOLE_UART_NONE", 
                        "help": null, 
                        "name": "CONSOLE_UART_BAUDRATE", 
                        "range": [
                            1200, 
                            4000000
                        ], 
                        "title": "UART console baud rate", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Bytes of memory to reserve for ULP coprocessor firmware & data.\n\nData is reserved at the beginning of RTC slow memory.\n", 
                                "name": "ULP_COPROC_RESERVE_MEM", 
                                "range": [
                                    0, 
                                    0
                                ], 
                                "title": "RTC slow memory reserved for coprocessor", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Set to 'y' if you plan to load a firmware for the coprocessor.\n\nIf this option is enabled, further coprocessor configuration will appear in the Components menu.\n", 
                        "name": "ULP_COPROC_ENABLED", 
                        "range": null, 
                        "title": "Enable Ultra Low Power (ULP) Coprocessor", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Outputs the relevant registers over the serial port and halt the\nprocessor. Needs a manual reset to restart.\n", 
                                "name": "ESP32_PANIC_PRINT_HALT", 
                                "range": null, 
                                "title": "Print registers and halt", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Outputs the relevant registers over the serial port and immediately\nreset the processor.\n", 
                                "name": "ESP32_PANIC_PRINT_REBOOT", 
                                "range": null, 
                                "title": "Print registers and reboot", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Just resets the processor without outputting anything\n", 
                                "name": "ESP32_PANIC_SILENT_REBOOT", 
                                "range": null, 
                                "title": "Silent reboot", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_PANIC>", 
                                "help": "Invoke gdbstub on the serial port, allowing for gdb to attach to it to do a postmortem\nof the crash.\n", 
                                "name": "ESP32_PANIC_GDBSTUB", 
                                "range": null, 
                                "title": "Invoke GDBStub", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If FreeRTOS detects unexpected behaviour or an unhandled exception, the panic handler is\ninvoked. Configure the panic handlers action here.\n", 
                        "name": "ESP32_PANIC", 
                        "title": "Panic handler behaviour", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The FreeRTOS panic and unhandled exception handers can detect a JTAG OCD debugger and\ninstead of panicking, have the debugger stop on the offending instruction.\n", 
                        "name": "ESP32_DEBUG_OCDAWARE", 
                        "range": null, 
                        "title": "Make exception and panic handlers JTAG/OCD aware", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!ESP32_TRAX", 
                        "help": "Debug stubs are used by OpenOCD to execute pre-compiled onboard code which does some useful debugging,\ne.g. GCOV data dump.\n", 
                        "name": "ESP32_DEBUG_STUBS_ENABLE", 
                        "range": null, 
                        "title": "OpenOCD debug stubs", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "INT_WDT", 
                                "help": "The timeout of the watchdog, in miliseconds. Make this higher than the FreeRTOS tick rate.\n", 
                                "name": "INT_WDT_TIMEOUT_MS", 
                                "range": [
                                    10, 
                                    10000
                                ], 
                                "title": "Interrupt watchdog timeout (ms)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "INT_WDT && !FREERTOS_UNICORE", 
                                "help": "Also detect if interrupts on CPU 1 are disabled for too long.\n", 
                                "name": "INT_WDT_CHECK_CPU1", 
                                "range": null, 
                                "title": "Also watch CPU1 tick interrupt", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This watchdog timer can detect if the FreeRTOS tick interrupt has not been called for a certain time,\neither because a task turned off interrupts and did not turn them on for a long time, or because an\ninterrupt handler did not return. It will try to invoke the panic handler first and failing that\nreset the SoC.\n", 
                        "name": "INT_WDT", 
                        "range": null, 
                        "title": "Interrupt watchdog", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "TASK_WDT", 
                                "help": "If this option is enabled, the Task Watchdog Timer will be configured to\ntrigger the panic handler when it times out. This can also be configured\nat run time (see Task Watchdog Timer API Reference)\n", 
                                "name": "TASK_WDT_PANIC", 
                                "range": null, 
                                "title": "Invoke panic handler on Task Watchdog timeout", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "TASK_WDT", 
                                "help": "Timeout period configuration for the Task Watchdog Timer in seconds.\nThis is also configurable at run time (see Task Watchdog Timer API Reference)\n", 
                                "name": "TASK_WDT_TIMEOUT_S", 
                                "range": [
                                    1, 
                                    60
                                ], 
                                "title": "Task Watchdog timeout period (seconds)", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "TASK_WDT", 
                                "help": "If this option is enabled, the Task Watchdog Timer will watch the CPU0\nIdle Task. Having the Task Watchdog watch the Idle Task allows for detection\nof CPU starvation as the Idle Task not being called is usually a symptom of\nCPU starvation. Starvation of the Idle Task is detrimental as FreeRTOS household\ntasks depend on the Idle Task getting some runtime every now and then.\n", 
                                "name": "TASK_WDT_CHECK_IDLE_TASK_CPU0", 
                                "range": null, 
                                "title": "Watch CPU0 Idle Task", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "TASK_WDT && !FREERTOS_UNICORE", 
                                "help": "If this option is enabled, the Task Wtachdog Timer will wach the CPU1\nIdle Task.\n", 
                                "name": "TASK_WDT_CHECK_IDLE_TASK_CPU1", 
                                "range": null, 
                                "title": "Watch CPU1 Idle Task", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The Task Watchdog Timer can be used to make sure individual tasks are still\nrunning. Enabling this option will cause the Task Watchdog Timer to be\ninitialized automatically at startup. The Task Watchdog timer can be\ninitialized after startup as well (see Task Watchdog Timer API Reference)\n", 
                        "name": "TASK_WDT", 
                        "range": null, 
                        "title": "Initialize Task Watchdog Timer on startup", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "name": "BROWNOUT_DET_LVL_SEL_0", 
                                        "range": null, 
                                        "title": "2.43V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "name": "BROWNOUT_DET_LVL_SEL_1", 
                                        "range": null, 
                                        "title": "2.48V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "name": "BROWNOUT_DET_LVL_SEL_2", 
                                        "range": null, 
                                        "title": "2.58V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "name": "BROWNOUT_DET_LVL_SEL_3", 
                                        "range": null, 
                                        "title": "2.62V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "name": "BROWNOUT_DET_LVL_SEL_4", 
                                        "range": null, 
                                        "title": "2.67V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "name": "BROWNOUT_DET_LVL_SEL_5", 
                                        "range": null, 
                                        "title": "2.70V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "name": "BROWNOUT_DET_LVL_SEL_6", 
                                        "range": null, 
                                        "title": "2.77V +/- 0.05", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice BROWNOUT_DET_LVL_SEL>", 
                                        "help": null, 
                                        "name": "BROWNOUT_DET_LVL_SEL_7", 
                                        "range": null, 
                                        "title": "2.80V +/- 0.05", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "BROWNOUT_DET", 
                                "help": "The brownout detector will reset the chip when the supply voltage is approximately\nbelow this level. Note that there may be some variation of brownout voltage level\nbetween each ESP32 chip.\n", 
                                "name": "BROWNOUT_DET_LVL_SEL", 
                                "title": "Brownout voltage level", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "The ESP32 has a built-in brownout detector which can detect if the voltage is lower than\na specific value. If this happens, it will reset the chip in order to prevent unintended\nbehaviour.\n", 
                        "name": "BROWNOUT_DET", 
                        "range": null, 
                        "title": "Hardware brownout detect & reset", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "BROWNOUT_DET_LVL", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "name": "ESP32_TIME_SYSCALL_USE_RTC_FRC1", 
                                "range": null, 
                                "title": "RTC and high-resolution timer", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "name": "ESP32_TIME_SYSCALL_USE_RTC", 
                                "range": null, 
                                "title": "RTC", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "name": "ESP32_TIME_SYSCALL_USE_FRC1", 
                                "range": null, 
                                "title": "High-resolution timer", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_TIME_SYSCALL>", 
                                "help": null, 
                                "name": "ESP32_TIME_SYSCALL_USE_NONE", 
                                "range": null, 
                                "title": "None", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "This setting defines which hardware timers are used to\nimplement 'gettimeofday' and 'time' functions in C library.\n\n- If both high-resolution and RTC timers are used, timekeeping will\n  continue in deep sleep. Time will be reported at 1 microsecond\n  resolution. This is the default, and the recommended option.\n- If only high-resolution timer is used, gettimeofday will\n  provide time at microsecond resolution.\n  Time will not be preserved when going into deep sleep mode.\n- If only RTC timer is used, timekeeping will continue in\n  deep sleep, but time will be measured at 6.(6) microsecond\n  resolution. Also the gettimeofday function itself may take\n  longer to run.\n- If no timers are used, gettimeofday and time functions\n  return -1 and set errno to ENOSYS.\n- When RTC is used for timekeeping, two RTC_STORE registers are\n  used to keep time in deep sleep mode.\n", 
                        "name": "ESP32_TIME_SYSCALL", 
                        "title": "Timers used for gettimeofday function", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLOCK_SOURCE>", 
                                "help": null, 
                                "name": "ESP32_RTC_CLOCK_SOURCE_INTERNAL_RC", 
                                "range": null, 
                                "title": "Internal 150kHz RC oscillator", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_RTC_CLOCK_SOURCE>", 
                                "help": null, 
                                "name": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_CRYSTAL", 
                                "range": null, 
                                "title": "External 32kHz crystal", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Choose which clock is used as RTC clock source.\n", 
                        "name": "ESP32_RTC_CLOCK_SOURCE", 
                        "title": "RTC clock source", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When the startup code initializes RTC_SLOW_CLK, it can perform\ncalibration by comparing the RTC_SLOW_CLK frequency with main XTAL\nfrequency. This option sets the number of RTC_SLOW_CLK cycles measured\nby the calibration routine. Higher numbers increase calibration\nprecision, which may be important for applications which spend a lot of\ntime in deep sleep. Lower numbers reduce startup time.\n\nWhen this option is set to 0, clock calibration will not be performed at\nstartup, and approximate clock frequencies will be assumed:\n\n- 150000 Hz if internal RC oscillator is used as clock source. For this use value 1024.\n- 32768 Hz if the 32k crystal oscillator is used. For this use value 3000 or more.\n  In case more value will help improve the definition of the launch of the crystal.\n  If the crystal could not start, it will be switched to internal RC.\n", 
                        "name": "ESP32_RTC_CLK_CAL_CYCLES", 
                        "range": [
                            0, 
                            125000
                        ], 
                        "title": "Number of cycles for RTC_SLOW_CLK calibration", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_RTC_CLOCK_SOURCE_EXTERNAL_CRYSTAL", 
                        "help": "To reduce the startup time of an external RTC crystal,\nwe bootstrap it with a 32kHz square wave for a fixed number of cycles.\nSetting 0 will disable bootstrapping (if disabled, the crystal may take\nlonger to start up or fail to oscillate under some conditions).\n\nIf this value is too high, a faulty crystal may initially start and then fail.\nIf this value is too low, an otherwise good crystal may not start.\n\nTo accurately determine if the crystal has started,\nset a larger \"Number of cycles for RTC_SLOW_CLK calibration\" (about 3000).\n", 
                        "name": "ESP32_RTC_XTAL_BOOTSTRAP_CYCLES", 
                        "range": [
                            0, 
                            32768
                        ], 
                        "title": "Bootstrap cycles for external 32kHz crystal", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "When ESP32 exits deep sleep, the CPU and the flash chip are powered on\nat the same time. CPU will run deep sleep stub first, and then\nproceed to load code from flash. Some flash chips need sufficient\ntime to pass between power on and first read operation. By default,\nwithout any extra delay, this time is approximately 900us, although\nsome flash chip types need more than that.\n\nBy default extra delay is set to 2000us. When optimizing startup time\nfor applications which require it, this value may be reduced.\n\nIf you are seeing \"flash read err, 1000\" message printed to the\nconsole after deep sleep reset, try increasing this value.\n", 
                        "name": "ESP32_DEEP_SLEEP_WAKEUP_DELAY", 
                        "range": [
                            0, 
                            5000
                        ], 
                        "title": "Extra delay in deep sleep wake stub (in us)", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "name": "ESP32_XTAL_FREQ_40", 
                                "range": null, 
                                "title": "40 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "name": "ESP32_XTAL_FREQ_26", 
                                "range": null, 
                                "title": "26 MHz", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_XTAL_FREQ_SEL>", 
                                "help": null, 
                                "name": "ESP32_XTAL_FREQ_AUTO", 
                                "range": null, 
                                "title": "Autodetect", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "ESP32 currently supports the following XTAL frequencies:\n\n- 26 MHz\n- 40 MHz\n\nStartup code can automatically estimate XTAL frequency. This feature\nuses the internal 8MHz oscillator as a reference. Because the internal\noscillator frequency is temperature dependent, it is not recommended\nto use automatic XTAL frequency detection in applications which need\nto work at high ambient temperatures and use high-temperature\nqualified chips and modules.\n", 
                        "name": "ESP32_XTAL_FREQ_SEL", 
                        "title": "Main XTAL frequency", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "ESP32_XTAL_FREQ", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If set, the first time the app boots it will disable the BASIC ROM Console\npermanently (by burning an efuse).\n\nOtherwise, the BASIC ROM Console starts on reset if no valid bootloader is\nread from the flash.\n\n(Enabling secure boot also disables the BASIC ROM Console by default.)\n", 
                        "name": "DISABLE_BASIC_ROM_CONSOLE", 
                        "range": null, 
                        "title": "Permanently disable BASIC ROM Console", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!BT_ENABLED", 
                        "help": "If enabled, this disables the linking of binary libraries in the application build. Note\nthat after enabling this Wi-Fi/Bluetooth will not work.\n", 
                        "name": "NO_BLOBS", 
                        "range": null, 
                        "title": "No Binary Blobs", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, esp_timer_dump will dump information such as number of times\nthe timer was started, number of times the timer has triggered, and the\ntotal time it took for the callback to run.\nThis option has some effect on timer performance and the amount of memory\nused for timer storage, and should only be used for debugging/testing\npurposes.\n", 
                        "name": "ESP_TIMER_PROFILING", 
                        "range": null, 
                        "title": "Enable esp_timer profiling features", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Bootloaders before IDF v2.1 did less initialisation of the\nsystem clock. This setting needs to be enabled to build an app\nwhich can be booted by these older bootloaders.\n\nIf this setting is enabled, the app can be booted by any bootloader\nfrom IDF v1.0 up to the current version.\n\nIf this setting is disabled, the app can only be booted by bootloaders\nfrom IDF v2.1 or newer.\n\nEnabling this setting adds approximately 1KB to the app's IRAM usage.\n", 
                        "name": "COMPATIBLE_PRE_V2_1_BOOTLOADERS", 
                        "range": null, 
                        "title": "App compatible with bootloaders before IDF v2.1", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Functions esp_err_to_name() and esp_err_to_name_r() return string\nrepresentations of error codes from a pre-generated lookup table.\nThis option can be used to turn off the use of the look-up table in\norder to save memory but this comes at the price of sacrificing\ndistinguishable (meaningful) output string representations.\n", 
                        "name": "ESP_ERR_TO_NAME_LOOKUP", 
                        "range": null, 
                        "title": "Enable lookup of error code strings", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "ESP32-specific", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice SW_COEXIST_PREFERENCE>", 
                                        "help": null, 
                                        "name": "SW_COEXIST_PREFERENCE_WIFI", 
                                        "range": null, 
                                        "title": "WiFi", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice SW_COEXIST_PREFERENCE>", 
                                        "help": null, 
                                        "name": "SW_COEXIST_PREFERENCE_BT", 
                                        "range": null, 
                                        "title": "Bluetooth(include BR/EDR and BLE)", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice SW_COEXIST_PREFERENCE>", 
                                        "help": null, 
                                        "name": "SW_COEXIST_PREFERENCE_BALANCE", 
                                        "range": null, 
                                        "title": "Balance", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "SW_COEXIST_ENABLE", 
                                "help": "Choose Bluetooth/WiFi/Balance for different preference.\nIf choose WiFi, it will make WiFi performance better. Such, keep WiFi Audio more fluent.\nIf choose Bluetooth, it will make Bluetooth performance better. Such, keep Bluetooth(A2DP) Audio more fluent.\nIf choose Balance, the performance of WiFi and bluetooth will be balance. It's default. Normally, just choose balance, the A2DP audio can play fluently, too.\nExcept config preference in menuconfig, you can also call esp_coex_preference_set() dynamically.\n", 
                                "name": "SW_COEXIST_PREFERENCE", 
                                "title": "WiFi/Bluetooth coexistence performance preference", 
                                "type": "choice"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "SW_COEXIST_ENABLE", 
                                "help": null, 
                                "name": "SW_COEXIST_PREFERENCE_VALUE", 
                                "range": null, 
                                "title": null, 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "BT_ENABLED", 
                        "help": "If enabled, WiFi & Bluetooth coexistence is controlled by software rather than hardware.\nRecommended for heavy traffic scenarios. Both coexistence configuration options are\nautomatically managed, no user intervention is required.\n", 
                        "name": "SW_COEXIST_ENABLE", 
                        "range": null, 
                        "title": "Software controls WiFi/Bluetooth coexistence", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi static RX buffers. Each buffer takes approximately 1.6KB of RAM.\nThe static rx buffers are allocated when esp_wifi_init is called, they are not freed\nuntil esp_wifi_deinit is called.\n\nWiFi hardware use these buffers to receive all 802.11 frames.\nA higher number may allow higher throughput but increases memory use.\n", 
                        "name": "ESP32_WIFI_STATIC_RX_BUFFER_NUM", 
                        "range": [
                            2, 
                            25
                        ], 
                        "title": "Max number of WiFi static RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set the number of WiFi dynamic RX buffers, 0 means unlimited RX buffers will be allocated\n(provided sufficient free RAM). The size of each dynamic RX buffer depends on the size of\nthe received data frame.\n\nFor each received data frame, the WiFi driver makes a copy to an RX buffer and then delivers\nit to the high layer TCP/IP stack. The dynamic RX buffer is freed after the higher layer has\nsuccessfully received the data frame.\n\nFor some applications, WiFi data frames may be received faster than the application can\nprocess them. In these cases we may run out of memory if RX buffer number is unlimited (0).\n\nIf a dynamic RX buffer limit is set, it should be at least the number of static RX buffers.\n", 
                        "name": "ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM", 
                        "range": [
                            0, 
                            128
                        ], 
                        "title": "Max number of WiFi dynamic RX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TX_BUFFER>", 
                                "help": null, 
                                "name": "ESP32_WIFI_STATIC_TX_BUFFER", 
                                "range": null, 
                                "title": "Static", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "!SPIRAM_USE_MALLOC && <choice ESP32_WIFI_TX_BUFFER>", 
                                "help": null, 
                                "name": "ESP32_WIFI_DYNAMIC_TX_BUFFER", 
                                "range": null, 
                                "title": "Dynamic", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select type of WiFi TX buffers:\n\nIf \"Static\" is selected, WiFi TX buffers are allocated when WiFi is initialized and released\nwhen WiFi is de-initialized. The size of each static TX buffer is fixed to about 1.6KB.\n\nIf \"Dynamic\" is selected, each WiFi TX buffer is allocated as needed when a data frame is\ndelivered to the Wifi driver from the TCP/IP stack. The buffer is freed after the data frame\nhas been sent by the WiFi driver. The size of each dynamic TX buffer depends on the length\nof each data frame sent by the TCP/IP layer.\n\nIf PSRAM is enabled, \"Static\" should be selected to guarantee enough WiFi TX buffers.\nIf PSRAM is disabled, \"Dynamic\" should be selected to improve the utilization of RAM.\n", 
                        "name": "ESP32_WIFI_TX_BUFFER", 
                        "title": "Type of WiFi TX buffers", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "ESP32_WIFI_TX_BUFFER_TYPE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_WIFI_STATIC_TX_BUFFER", 
                        "help": "Set the number of WiFi static TX buffers. Each buffer takes approximately 1.6KB of RAM.\nThe static RX buffers are allocated when esp_wifi_init() is called, they are not released\nuntil esp_wifi_deinit() is called.\n\nFor each transmitted data frame from the higher layer TCP/IP stack, the WiFi driver makes a\ncopy of it in a TX buffer.  For some applications especially UDP applications, the upper\nlayer can deliver frames faster than WiFi layer can transmit. In these cases, we may run out\nof TX buffers.\n", 
                        "name": "ESP32_WIFI_STATIC_TX_BUFFER_NUM", 
                        "range": [
                            6, 
                            64
                        ], 
                        "title": "Max number of WiFi static TX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "ESP32_WIFI_DYNAMIC_TX_BUFFER", 
                        "help": "Set the number of WiFi dynamic TX buffers. The size of each dynamic TX buffer is not fixed,\nit depends on the size of each transmitted data frame.\n\nFor each transmitted frame from the higher layer TCP/IP stack, the WiFi driver makes a copy\nof it in a TX buffer. For some applications, especially UDP applications, the upper layer\ncan deliver frames faster than WiFi layer can transmit. In these cases, we may run out of TX\nbuffers.\n", 
                        "name": "ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM", 
                        "range": [
                            16, 
                            128
                        ], 
                        "title": "Max number of WiFi dynamic TX buffers", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable CSI(Channel State Information) feature. CSI takes about\nCONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM KB of RAM. If CSI is not used, it is better to disable\nthis feature in order to save memory.\n", 
                        "name": "ESP32_WIFI_CSI_ENABLED", 
                        "range": null, 
                        "title": "WiFi CSI(Channel State Information)", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_WIFI_AMPDU_TX_ENABLED", 
                                "help": "Set the size of WiFi Block Ack TX window. Generally a bigger value means higher throughput but\nmore memory. Most of time we should NOT change the default value unless special reason, e.g.\ntest the maximum UDP TX throughput with iperf etc. For iperf test in shieldbox, the recommended\nvalue is 9~12.\n", 
                                "name": "ESP32_WIFI_TX_BA_WIN", 
                                "range": [
                                    2, 
                                    32
                                ], 
                                "title": "WiFi AMPDU TX BA window size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable AMPDU TX feature\n", 
                        "name": "ESP32_WIFI_AMPDU_TX_ENABLED", 
                        "range": null, 
                        "title": "WiFi AMPDU TX", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "ESP32_WIFI_AMPDU_RX_ENABLED", 
                                "help": "Set the size of WiFi Block Ack RX window. Generally a bigger value means higher throughput but\nmore memory. Most of time we should NOT change the default value unless special reason, e.g.\ntest the maximum UDP RX throughput with iperf etc. For iperf test in shieldbox, the recommended\nvalue is 9~12.\n", 
                                "name": "ESP32_WIFI_RX_BA_WIN", 
                                "range": [
                                    2, 
                                    32
                                ], 
                                "title": "WiFi AMPDU RX BA window size", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Select this option to enable AMPDU RX feature\n", 
                        "name": "ESP32_WIFI_AMPDU_RX_ENABLED", 
                        "range": null, 
                        "title": "WiFi AMPDU RX", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select this option to enable WiFi NVS flash\n", 
                        "name": "ESP32_WIFI_NVS_ENABLED", 
                        "range": null, 
                        "title": "WiFi NVS flash", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TASK_CORE_ID>", 
                                "help": null, 
                                "name": "ESP32_WIFI_TASK_PINNED_TO_CORE_0", 
                                "range": null, 
                                "title": "Core 0", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice ESP32_WIFI_TASK_CORE_ID>", 
                                "help": null, 
                                "name": "ESP32_WIFI_TASK_PINNED_TO_CORE_1", 
                                "range": null, 
                                "title": "Core 1", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!FREERTOS_UNICORE", 
                        "help": "Pinned WiFi task to core 0 or core 1.\n", 
                        "name": "ESP32_WIFI_TASK_CORE_ID", 
                        "title": "WiFi Task Core ID", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "ESP-MESH utilizes beacon frames to detect and resolve root node conflicts (see documentation). However the default\nlength of a beacon frame can simultaneously hold only five root node identifier structures, meaning that a root node\nconflict of up to five nodes can be detected at one time. In the occurence of more root nodes conflict involving more\nthan five root nodes, the conflict resolution process will detect five of the root nodes, resolve the conflict, and\u3000\nre-detect more root nodes. This process will repeat until all root node conflicts are resolved. However this process\ncan generally take a very long time.\n\nTo counter this situation, the beacon frame length can be increased such that more root nodes can be detected simultaneously.\nEach additional root node will require 36 bytes and should be added ontop of the default beacon frame length of\n752 bytes. For example, if you want to detect 10 root nodes simultaneously, you need to set the beacon frame length as\u3000\n932 (752+36*5).\n\nSetting a longer beacon length also assists with debugging as the conflicting root nodes can be identified more quickly.\n", 
                        "name": "ESP32_WIFI_SOFTAP_BEACON_MAX_LEN", 
                        "range": [
                            752, 
                            1256
                        ], 
                        "title": "Max length of WiFi SoftAP Beacon", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "title": "Wi-Fi", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is enabled, NVS will be initialized and calibration data will be loaded from there.\nPHY calibration will be skipped on deep sleep wakeup. If calibration data is not found, full calibration\nwill be performed and stored in NVS. Normally, only partial calibration will be performed.\nIf this option is disabled, full calibration will be performed.\n\nIf it's easy that your board calibrate bad data, choose 'n'.\nTwo cases for example, you should choose 'n':\n1.If your board is easy to be booted up with antenna disconnected.\n2.Because of your board design, each time when you do calibration, the result are too unstable.\nIf unsure, choose 'y'.\n", 
                        "name": "ESP32_PHY_CALIBRATION_AND_DATA_STORAGE", 
                        "range": null, 
                        "title": "Store phy calibration data in NVS", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If enabled, PHY init data will be loaded from a partition.\nWhen using a custom partition table, make sure that PHY data\npartition is included (type: 'data', subtype: 'phy').\nWith default partition tables, this is done automatically.\nIf PHY init data is stored in a partition, it has to be flashed there,\notherwise runtime error will occur.\n\nIf this option is not enabled, PHY init data will be embedded\ninto the application binary.\n\nIf unsure, choose 'n'.\n", 
                        "name": "ESP32_PHY_INIT_DATA_IN_PARTITION", 
                        "range": null, 
                        "title": "Use a partition to store PHY init data", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Set maximum transmit power for WiFi radio. Actual transmit power for high\ndata rates may be lower than this setting.\n", 
                        "name": "ESP32_PHY_MAX_WIFI_TX_POWER", 
                        "range": [
                            0, 
                            20
                        ], 
                        "title": "Max WiFi TX power (dBm)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "ESP32_PHY_MAX_TX_POWER", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "title": "PHY", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, startup code configures dynamic frequency scaling.\nMax CPU frequency is set to CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ setting,\nmin frequency is set to XTAL frequency.\nIf disabled, DFS will not be active until the application\nconfigures it using esp_pm_configure function.\n", 
                                "name": "PM_DFS_INIT_AUTO", 
                                "range": null, 
                                "title": "Enable dynamic frequency scaling (DFS) at startup", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE && (ESP32_TIME_SYSCALL_USE_RTC || ESP32_TIME_SYSCALL_USE_RTC_FRC1)", 
                                "help": "When APB clock frequency changes, high-resolution timer (esp_timer)\nscale and base value need to be adjusted. Each adjustment may cause\nsmall error, and over time such small errors may cause time drift.\nIf this option is enabled, RTC timer will be used as a reference to\ncompensate for the drift.\nIt is recommended that this option is only used if 32k XTAL is selected\nas RTC clock source.\n", 
                                "name": "PM_USE_RTC_TIMER_REF", 
                                "range": null, 
                                "title": "Use RTC timer to prevent time drift (EXPERIMENTAL)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, esp_pm_* functions will keep track of the amount of time\neach of the power management locks has been held, and esp_pm_dump_locks\nfunction will print this information.\nThis feature can be used to analyze which locks are preventing the chip\nfrom going into a lower power state, and see what time the chip spends\nin each power saving mode. This feature does incur some run-time\noverhead, so should typically be disabled in production builds.\n", 
                                "name": "PM_PROFILING", 
                                "range": null, 
                                "title": "Enable profiling counters for PM locks", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "PM_ENABLE", 
                                "help": "If enabled, some GPIOs will be used to signal events such as RTOS ticks,\nfrequency switching, entry/exit from idle state. Refer to pm_trace.c\nfile for the list of GPIOs.\nThis feature is intended to be used when analyzing/debugging behavior\nof power management implementation, and should be kept disabled in\napplications.\n", 
                                "name": "PM_TRACE", 
                                "range": null, 
                                "title": "Enable debug tracing of PM using GPIOs", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, application is compiled with support for power management.\nThis option has run-time overhead (increased interrupt latency,\nlonger time to enter idle state), and it also reduces accuracy of\nRTOS ticks and timers used for timekeeping.\nEnable this option if application uses power management APIs.\n", 
                        "name": "PM_ENABLE", 
                        "range": null, 
                        "title": "Support for power management", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "Power Management", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "name": "LOG_DEFAULT_LEVEL_NONE", 
                                "range": null, 
                                "title": "No output", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "name": "LOG_DEFAULT_LEVEL_ERROR", 
                                "range": null, 
                                "title": "Error", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "name": "LOG_DEFAULT_LEVEL_WARN", 
                                "range": null, 
                                "title": "Warning", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "name": "LOG_DEFAULT_LEVEL_INFO", 
                                "range": null, 
                                "title": "Info", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "name": "LOG_DEFAULT_LEVEL_DEBUG", 
                                "range": null, 
                                "title": "Debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice LOG_DEFAULT_LEVEL>", 
                                "help": null, 
                                "name": "LOG_DEFAULT_LEVEL_VERBOSE", 
                                "range": null, 
                                "title": "Verbose", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Specify how much output to see in logs by default.\nYou can set lower verbosity level at runtime using\nesp_log_level_set function.\n\nNote that this setting limits which log statements\nare compiled into the program. So setting this to, say,\n\"Warning\" would mean that changing log level to \"Debug\"\nat runtime will not be possible.\n", 
                        "name": "LOG_DEFAULT_LEVEL", 
                        "title": "Default log verbosity", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "LOG_DEFAULT_LEVEL", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable ANSI terminal color codes in bootloader output.\n\nIn order to view these, your terminal program must support ANSI color codes.\n", 
                        "name": "LOG_COLORS", 
                        "range": null, 
                        "title": "Use ANSI terminal colors in log output", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "Log output", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Priority used to create new tasks with default pthread parameters.\n", 
                        "name": "ESP32_PTHREAD_TASK_PRIO_DEFAULT", 
                        "range": [
                            0, 
                            255
                        ], 
                        "title": "Default task priority", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Stack size used to create new tasks with default pthread parameters.\n", 
                        "name": "ESP32_PTHREAD_TASK_STACK_SIZE_DEFAULT", 
                        "range": null, 
                        "title": "Default task stack size", 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "title": "PThreads", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Some ESP32s have Two Point calibration values burned into eFuse BLOCK3.\nThis option will allow the ADC calibration component to characterize the\nADC-Voltage curve using Two Point values if they are available.\n", 
                        "name": "ADC_CAL_EFUSE_TP_ENABLE", 
                        "range": null, 
                        "title": "Use Two Point Values", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Some ESP32s have Vref burned into eFuse BLOCK0. This option will allow\nthe ADC calibration component to characterize the ADC-Voltage curve using\neFuse Vref if it is available.\n", 
                        "name": "ADC_CAL_EFUSE_VREF_ENABLE", 
                        "range": null, 
                        "title": "Use eFuse Vref", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option will allow the ADC calibration component to use Lookup Tables\nto correct for non-linear behavior in 11db attenuation. Other attenuations\ndo not exhibit non-linear behavior hence will not be affected by this option.\n", 
                        "name": "ADC_CAL_LUT_ENABLE", 
                        "range": null, 
                        "title": "Use Lookup Tables", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "ADC-Calibration", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option will enable https protocol by linking mbedtls library and initializing SSL transport\n", 
                        "name": "ESP_HTTP_CLIENT_ENABLE_HTTPS", 
                        "range": null, 
                        "title": "Enable https", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "ESP HTTP client", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_DYNAMIC", 
                                "range": null, 
                                "title": "Dynamic (all code pages supported)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_437", 
                                "range": null, 
                                "title": "US (CP437)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_720", 
                                "range": null, 
                                "title": "Arabic (CP720)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_737", 
                                "range": null, 
                                "title": "Greek (CP737)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_771", 
                                "range": null, 
                                "title": "KBL (CP771)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_775", 
                                "range": null, 
                                "title": "Baltic (CP775)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_850", 
                                "range": null, 
                                "title": "Latin 1 (CP850)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_852", 
                                "range": null, 
                                "title": "Latin 2 (CP852)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_855", 
                                "range": null, 
                                "title": "Cyrillic (CP855)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_857", 
                                "range": null, 
                                "title": "Turkish (CP857)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_860", 
                                "range": null, 
                                "title": "Portugese (CP860)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_861", 
                                "range": null, 
                                "title": "Icelandic (CP861)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_862", 
                                "range": null, 
                                "title": "Hebrew (CP862)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_863", 
                                "range": null, 
                                "title": "Canadian French (CP863)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_864", 
                                "range": null, 
                                "title": "Arabic (CP864)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_865", 
                                "range": null, 
                                "title": "Nordic (CP865)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_866", 
                                "range": null, 
                                "title": "Russian (CP866)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_869", 
                                "range": null, 
                                "title": "Greek 2 (CP869)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_932", 
                                "range": null, 
                                "title": "Japanese (DBCS) (CP932)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_936", 
                                "range": null, 
                                "title": "Simplified Chinese (DBCS) (CP936)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_949", 
                                "range": null, 
                                "title": "Korean (DBCS) (CP949)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_CHOOSE_CODEPAGE>", 
                                "help": null, 
                                "name": "FATFS_CODEPAGE_950", 
                                "range": null, 
                                "title": "Traditional Chinese (DBCS) (CP950)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "OEM code page used for file name encodings.\n\nIf \"Dynamic\" is selected, code page can be chosen at runtime using\nf_setcp function. Note that choosing this option will increase\napplication size by ~480kB.\n", 
                        "name": "FATFS_CHOOSE_CODEPAGE", 
                        "title": "OEM Code Page", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "FATFS_CODEPAGE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_LONG_FILENAMES>", 
                                "help": null, 
                                "name": "FATFS_LFN_NONE", 
                                "range": null, 
                                "title": "No long filenames", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_LONG_FILENAMES>", 
                                "help": null, 
                                "name": "FATFS_LFN_HEAP", 
                                "range": null, 
                                "title": "Long filename buffer in heap", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_LONG_FILENAMES>", 
                                "help": null, 
                                "name": "FATFS_LFN_STACK", 
                                "range": null, 
                                "title": "Long filename buffer on stack", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Support long filenames in FAT. Long filename data increases\nmemory usage. FATFS can be configured to store the buffer for\nlong filename data in stack or heap.\n", 
                        "name": "FATFS_LONG_FILENAMES", 
                        "title": "Long filename support", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!FATFS_LFN_NONE", 
                        "help": "Maximum long filename length. Can be reduced to save RAM.\n", 
                        "name": "FATFS_MAX_LFN", 
                        "range": [
                            12, 
                            255
                        ], 
                        "title": "Max long filename length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_API_ENCODING>", 
                                "help": null, 
                                "name": "FATFS_API_ENCODING_ANSI_OEM", 
                                "range": null, 
                                "title": "API uses ANSI/OEM encoding", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_API_ENCODING>", 
                                "help": null, 
                                "name": "FATFS_API_ENCODING_UTF_16", 
                                "range": null, 
                                "title": "API uses UTF-16 encoding", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FATFS_API_ENCODING>", 
                                "help": null, 
                                "name": "FATFS_API_ENCODING_UTF_8", 
                                "range": null, 
                                "title": "API uses UTF-8 encoding", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "!FATFS_LFN_NONE", 
                        "help": "Choose encoding for character and string arguments/returns when using\nFATFS APIs. The encoding of arguments will usually depend on text\neditor settings.\n", 
                        "name": "FATFS_API_ENCODING", 
                        "title": "API character encoding", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option sets the FATFS configuration value _FS_LOCK.\nThe option _FS_LOCK switches file lock function to control duplicated file open\nand illegal operation to open objects.\n\n* 0: Disable file lock function. To avoid volume corruption, application\n     should avoid illegal open, remove and rename to the open objects.\n\n* >0: Enable file lock function. The value defines how many files/sub-directories\n     can be opened simultaneously under file lock control.\n\nNote that the file lock control is independent of re-entrancy.\n", 
                        "name": "FATFS_FS_LOCK", 
                        "range": [
                            0, 
                            65535
                        ], 
                        "title": "Number of simultaneously open files protected by lock function", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option sets FATFS configuration value _FS_TIMEOUT, scaled to milliseconds.\nSets the number of milliseconds FATFS will wait to acquire a mutex when\noperating on an open file. For example, if one task is performing a lenghty\noperation, another task will wait for the first task to release the lock,\nand time out after amount of time set by this option.\n", 
                        "name": "FATFS_TIMEOUT_MS", 
                        "range": null, 
                        "title": "Timeout for acquiring a file lock, ms", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option affects FATFS configuration value _FS_TINY.\n\nIf this option is set, _FS_TINY is 0, and each open file has its own cache,\nsize of the cache is equal to the _MAX_SS variable (512 or 4096 bytes).\nThis option uses more RAM if more than 1 file is open, but needs less reads\nand writes to the storage for some operations.\n\nIf this option is not set, _FS_TINY is 1, and single cache is used for\nall open files, size is also equal to _MAX_SS variable. This reduces the\namount of heap used when multiple files are open, but increases the number\nof read and write operations which FATFS needs to make.\n", 
                        "name": "FATFS_PER_FILE_CACHE", 
                        "range": null, 
                        "title": "Use separate cache for each file", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "FAT Filesystem support", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice WL_SECTOR_SIZE>", 
                                "help": null, 
                                "name": "WL_SECTOR_SIZE_512", 
                                "range": null, 
                                "title": "512", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice WL_SECTOR_SIZE>", 
                                "help": null, 
                                "name": "WL_SECTOR_SIZE_4096", 
                                "range": null, 
                                "title": "4096", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Sector size used by wear levelling library.\nYou can set default sector size or size that will\nfit to the flash device sector size.\n\nWith sector size set to 4096 bytes, wear levelling library is more\nefficient. However if FAT filesystem is used on top of wear levelling\nlibrary, it will need more temporary storage: 4096 bytes for each\nmounted filesystem and 4096 bytes for each opened file.\n\nWith sector size set to 512 bytes, wear levelling library will perform\nmore operations with flash memory, but less RAM will be used by FAT\nfilesystem library (512 bytes for the filesystem and 512 bytes for each\nfile opened).\n", 
                        "name": "WL_SECTOR_SIZE", 
                        "title": "Wear Levelling library sector size", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "WL_SECTOR_SIZE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice WL_SECTOR_MODE>", 
                                "help": null, 
                                "name": "WL_SECTOR_MODE_PERF", 
                                "range": null, 
                                "title": "Perfomance", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice WL_SECTOR_MODE>", 
                                "help": null, 
                                "name": "WL_SECTOR_MODE_SAFE", 
                                "range": null, 
                                "title": "Safety", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": "WL_SECTOR_SIZE_512", 
                        "help": "Specify the mode to store data into flash:\n\n- In Performance mode a data will be stored to the RAM and then\n  stored back to the flash. Compared to the Safety mode, this operation is\n  faster, but if power will be lost when erase sector operation is in\n  progress, then the data from complete flash device sector will be lost.\n\n- In Safety mode data from complete flash device sector will be read from\n  flash, modified, and then stored back to flash.\n  Compared to the Performance mode, this operation is slower, but if\n  power is lost during erase sector operation, then the data from full\n  flash device sector will not be lost.\n", 
                        "name": "WL_SECTOR_MODE", 
                        "title": "Sector store mode", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": null, 
                        "name": "WL_SECTOR_MODE", 
                        "range": null, 
                        "title": null, 
                        "type": "int"
                    }
                ], 
                "depends_on": null, 
                "title": "Wear Levelling", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This version of FreeRTOS normally takes control of all cores of\nthe CPU. Select this if you only want to start it on the first core.\nThis is needed when e.g. another process needs complete control\nover the second core.\n", 
                        "name": "FREERTOS_UNICORE", 
                        "range": null, 
                        "title": "Run FreeRTOS only on first core", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CORETIMER>", 
                                "help": "Select this to use timer 0\n", 
                                "name": "FREERTOS_CORETIMER_0", 
                                "range": null, 
                                "title": "Timer 0 (int 6, level 1)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CORETIMER>", 
                                "help": "Select this to use timer 1\n", 
                                "name": "FREERTOS_CORETIMER_1", 
                                "range": null, 
                                "title": "Timer 1 (int 15, level 3)", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS needs a timer with an associated interrupt to use as\nthe main tick source to increase counters, run timers and do\npre-emptive multitasking with. There are multiple timers available\nto do this, with different interrupt priorities. Check\n", 
                        "name": "FREERTOS_CORETIMER", 
                        "title": "Xtensa timer to use as the FreeRTOS tick source", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Select the tick rate at which FreeRTOS does pre-emptive context switching.\n", 
                        "name": "FREERTOS_HZ", 
                        "range": [
                            1, 
                            1000
                        ], 
                        "title": "Tick rate (Hz)", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Some functions in FreeRTOS have not been thoroughly tested yet when moving to\nthe SMP implementation of FreeRTOS. When this option is enabled, these fuctions\nwill throw an assert().\n", 
                        "name": "FREERTOS_ASSERT_ON_UNTESTED_FUNCTION", 
                        "range": null, 
                        "title": "Halt when an SMP-untested function is called", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Do not check for stack overflows (configCHECK_FOR_STACK_OVERFLOW=0)\n", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_NONE", 
                                "range": null, 
                                "title": "No checking", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Check for stack overflows on each context switch by checking if\nthe stack pointer is in a valid range. Quick but does not detect\nstack overflows that happened between context switches\n(configCHECK_FOR_STACK_OVERFLOW=1)\n", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_PTRVAL", 
                                "range": null, 
                                "title": "Check by stack pointer value", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_CHECK_STACKOVERFLOW>", 
                                "help": "Places some magic bytes at the end of the stack area and on each\ncontext switch, check if these bytes are still intact. More thorough\nthan just checking the pointer, but also slightly slower.\n(configCHECK_FOR_STACK_OVERFLOW=2)\n", 
                                "name": "FREERTOS_CHECK_STACKOVERFLOW_CANARY", 
                                "range": null, 
                                "title": "Check using canary bytes", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS can check for stack overflows in threads and trigger an user function\ncalled vApplicationStackOverflowHook when this happens.\n", 
                        "name": "FREERTOS_CHECK_STACKOVERFLOW", 
                        "title": "Check for stack overflow", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS can check if a stack has overflown its bounds by checking either the value of\nthe stack pointer or by checking the integrity of canary bytes. (See FREERTOS_CHECK_STACKOVERFLOW\nfor more information.) These checks only happen on a context switch, and the situation that caused\nthe stack overflow may already be long gone by then. This option will use the debug memory\nwatchpoint 1 (the second one) to allow breaking into the debugger (or panic'ing) as soon as any\nof the last 32 bytes on the stack of a task are overwritten. The side effect is that using gdb, you\neffectively only have one watchpoint; the 2nd one is overwritten as soon as a task switch happens.\n\nThis check only triggers if the stack overflow writes within 4 bytes of the end of the stack, rather than\novershooting further, so it is worth combining this approach with one of the other stack overflow check methods.\n\nWhen this watchpoint is hit, gdb will stop with a SIGTRAP message. When no JTAG OCD is attached, esp-idf\nwill panic on an unhandled debug exception.\n", 
                        "name": "FREERTOS_WATCHPOINT_END_OF_STACK", 
                        "range": null, 
                        "title": "Set a debug watchpoint as a stack overflow check", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "If this option is enabled, interrupt stack frame will be modified to\npoint to the code of the interrupted task as its return address.\nThis helps the debugger (or the panic handler) show a backtrace from\nthe interrupt to the task which was interrupted. This also works for\nnested interrupts: higer level interrupt stack can be traced back to the\nlower level interrupt.\nThis option adds 4 instructions to the interrupt dispatching code.\n", 
                        "name": "FREERTOS_INTERRUPT_BACKTRACE", 
                        "range": null, 
                        "title": "Enable backtrace from interrupt to task context", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS has the ability to store per-thread pointers in the task\ncontrol block. This controls the number of pointers available.\n\nThis value must be at least 1. Index 0 is reserved for use by the pthreads API\nthread-local-storage. Other indexes can be used for any desired purpose.\n", 
                        "name": "FREERTOS_THREAD_LOCAL_STORAGE_POINTERS", 
                        "range": [
                            1, 
                            256
                        ], 
                        "title": "Number of thread local storage pointers", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "If a FreeRTOS configASSERT() fails, FreeRTOS will abort() and\nhalt execution. The panic handler can be configured to handle\nthe outcome of an abort() in different ways.\n", 
                                "name": "FREERTOS_ASSERT_FAIL_ABORT", 
                                "range": null, 
                                "title": "abort() on failed assertions", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "If a FreeRTOS assertion fails, print it out and continue.\n", 
                                "name": "FREERTOS_ASSERT_FAIL_PRINT_CONTINUE", 
                                "range": null, 
                                "title": "Print and continue failed assertions", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice FREERTOS_ASSERT>", 
                                "help": "FreeRTOS configASSERT() will not be compiled into the binary.\n", 
                                "name": "FREERTOS_ASSERT_DISABLE", 
                                "range": null, 
                                "title": "Disable FreeRTOS assertions", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Failed FreeRTOS configASSERT() assertions can be configured to\nbehave in different ways.\n", 
                        "name": "FREERTOS_ASSERT", 
                        "title": "FreeRTOS assertions", 
                        "type": "choice"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The idle task has its own stack, sized in bytes. The default size is enough for most uses. Size can be reduced\nto 768 bytes if no (or simple) FreeRTOS idle hooks are used and pthread local storage or FreeRTOS local storage\ncleanup callbacks are not used.\n\nThe stack size may need to be increased above the default if the app installs idle or thread local storage\ncleanup hooks that use a lot of stack memory.\n", 
                        "name": "FREERTOS_IDLE_TASK_STACKSIZE", 
                        "range": [
                            768, 
                            32768
                        ], 
                        "title": "Idle Task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The interrupt handlers have their own stack. The size of the stack can be defined here.\nEach processor has its own stack, so the total size occupied will be twice this.\n", 
                        "name": "FREERTOS_ISR_STACKSIZE", 
                        "range": [
                            1536, 
                            32768
                        ], 
                        "title": "ISR stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_LEGACY_HOOKS", 
                                "help": "If enabled, FreeRTOS will call a function called vApplicationIdleHook when the idle thread\non a CPU is running. Please make sure your code defines such a function.\n", 
                                "name": "FREERTOS_LEGACY_IDLE_HOOK", 
                                "range": null, 
                                "title": "Enable legacy idle hook", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_LEGACY_HOOKS", 
                                "help": "If enabled, FreeRTOS will call a function called vApplicationTickHook when a FreeRTOS\ntick is executed. Please make sure your code defines such a function.\n", 
                                "name": "FREERTOS_LEGACY_TICK_HOOK", 
                                "range": null, 
                                "title": "Enable legacy tick hook", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS offers a number of hooks/callback functions that are called when a timer\ntick happens, the idle thread runs etc. esp-idf replaces these by runtime registerable\nhooks using the esp_register_freertos_xxx_hook system, but for legacy reasons the old\nhooks can also still be enabled. Please enable this only if you have code that for some\nreason can't be migrated to the esp_register_freertos_xxx_hook system.\n", 
                        "name": "FREERTOS_LEGACY_HOOKS", 
                        "range": null, 
                        "title": "Use FreeRTOS legacy hooks", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Changes the maximum task name length. Each task allocated will\ninclude this many bytes for a task name. Using a shorter value\nsaves a small amount of RAM, a longer value allows more complex\nnames.\n\nFor most uses, the default of 16 is OK.\n", 
                        "name": "FREERTOS_MAX_TASK_NAME_LEN", 
                        "range": [
                            1, 
                            256
                        ], 
                        "title": "Maximum task name length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SUPPORT_STATIC_ALLOCATION", 
                                "help": "Enable this option to make FreeRTOS call the static task clean up hook when a task is deleted.\n\nBear in mind that if this option is enabled you will need to implement the following function::\n\n    void vPortCleanUpTCB ( void *pxTCB ) {\n        // place clean up code here\n    }\n", 
                                "name": "ENABLE_STATIC_TASK_CLEAN_UP_HOOK", 
                                "range": null, 
                                "title": "Enable static task clean up hook", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "FreeRTOS gives the application writer the ability to instead provide the memory\nthemselves, allowing the following objects to optionally be created without any\nmemory being allocated dynamically:\n\n    - Tasks\n    - Software Timers (Daemon task is still dynamic. See documentation)\n    - Queues\n    - Event Groups\n    - Binary Semaphores\n    - Counting Semaphores\n    - Recursive Semaphores\n    - Mutexes\n\nWhether it is preferable to use static or dynamic memory allocation is dependent on\nthe application, and the preference of the application writer. Both methods have pros\nand cons, and both methods can be used within the same RTOS application.\n\nCreating RTOS objects using statically allocated RAM has the benefit of providing the\napplication writer with more control: RTOS objects can be placed at specific memory locations.\nThe maximum RAM footprint can be determined at link time, rather than run time.\nThe application writer does not need to concern themselves with graceful handling of memory allocation failures.\nIt allows the RTOS to be used in applications that simply don't allow any dynamic memory allocation\n(although FreeRTOS includes allocation schemes that can overcome most objections).\n", 
                        "name": "SUPPORT_STATIC_ALLOCATION", 
                        "range": null, 
                        "title": "Enable FreeRTOS static allocation API", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The timer service task (primarily) makes use of existing FreeRTOS features, allowing timer\nfunctionality to be added to an application with minimal impact on the size of the application's\nexecutable binary.\n\nUse this constant to define the priority that the timer task will run at.\n", 
                        "name": "TIMER_TASK_PRIORITY", 
                        "range": [
                            1, 
                            25
                        ], 
                        "title": "FreeRTOS timer task priority", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "The timer service task (primarily) makes use of existing FreeRTOS features, allowing timer\nfunctionality to be added to an application with minimal impact on the size of the application's\nexecutable binary.\n\nUse this constant to define the size (in bytes) of the stack allocated for the timer task.\n", 
                        "name": "TIMER_TASK_STACK_DEPTH", 
                        "range": [
                            1536, 
                            32768
                        ], 
                        "title": "FreeRTOS timer task stack size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS provides a set of timer related API functions. Many of these functions use a standard\nFreeRTOS queue to send commands to the timer service task. The queue used for this purpose is\ncalled the 'timer command queue'. The 'timer command queue' is private to the FreeRTOS timer\nimplementation, and cannot be accessed directly.\n\nFor most uses the default value of 10 is OK.\n", 
                        "name": "TIMER_QUEUE_LENGTH", 
                        "range": [
                            5, 
                            20
                        ], 
                        "title": "FreeRTOS timer queue length", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "FreeRTOS uses the queue registry as a means for kernel aware debuggers to locate queues, semaphores,\nand mutexes. The registry allows for a textual name to be associated with a queue for easy identification\nwithin a debugging GUI. A value of 0 will disable queue registry functionality, and a value larger than 0\nwill specify the number of queues/semaphores/mutexes that the registry can hold.\n", 
                        "name": "FREERTOS_QUEUE_REGISTRY_SIZE", 
                        "range": [
                            0, 
                            20
                        ], 
                        "title": "FreeRTOS queue registry size", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_USE_TRACE_FACILITY", 
                                "help": "If enabled, configUSE_STATS_FORMATTING_FUNCTIONS will be defined as 1 in\nFreeRTOS. This will allow the usage of stats formatting functions such\nas vTaskList().\n", 
                                "name": "FREERTOS_USE_STATS_FORMATTING_FUNCTIONS", 
                                "range": null, 
                                "title": "Enable FreeRTOS stats formatting functions", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, configUSE_TRACE_FACILITY will be defined as 1 in FreeRTOS.\nThis will allow the usage of trace facility functions such as\nuxTaskGetSystemState().\n", 
                        "name": "FREERTOS_USE_TRACE_FACILITY", 
                        "range": null, 
                        "title": "Enable FreeRTOS trace facility", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "<choice FREERTOS_RUN_TIME_STATS_CLK>", 
                                        "help": "ESP Timer will be used as the clock source for FreeRTOS run time stats.\nThe ESP Timer runs at a frequency of 1MHz regardless of Dynamic\nFrequency Scaling. Therefore the ESP Timer will overflow in\napproximately 4290 seconds.\n", 
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER", 
                                        "range": null, 
                                        "title": "Use ESP TIMER for run time stats", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "<choice FREERTOS_RUN_TIME_STATS_CLK>", 
                                        "help": "CPU Clock will be used as the clock source for the generation of run\ntime stats. The CPU Clock has a frequency dependent on\nESP32_DEFAULT_CPU_FREQ_MHZ and Dynamic Frequency Scaling (DFS).\nTherefore the CPU Clock frequency can fluctuate between 80 to 240MHz.\nRun time stats generated using the CPU Clock represents the number of\nCPU cycles each task is allocated and DOES NOT reflect the amount of\ntime each task runs for (as CPU clock frequency can change). If the CPU\nclock consistently runs at the maximum frequency of 240MHz, it will\noverflow in approximately 17 seconds.\n", 
                                        "name": "FREERTOS_RUN_TIME_STATS_USING_CPU_CLK", 
                                        "range": null, 
                                        "title": "Use CPU Clock for run time stats", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": "FREERTOS_GENERATE_RUN_TIME_STATS", 
                                "help": "Choose the clock source for FreeRTOS run time stats. Options are CPU0's\nCPU Clock or the ESP Timer. Both clock sources are 32 bits. The CPU\nClock can run at a higher frequency hence provide a finer resolution\nbut will overflow much quicker. Note that run time stats are only valid\nuntil the clock source overflows.\n", 
                                "name": "FREERTOS_RUN_TIME_STATS_CLK", 
                                "title": "Choose the clock source for run time stats", 
                                "type": "choice"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "If enabled, configGENERATE_RUN_TIME_STATS will be defined as 1 in\nFreeRTOS. This will allow FreeRTOS to collect information regarding the\nusage of processor time amongst FreeRTOS tasks. Run time stats are\ngenerated using either the ESP Timer or the CPU Clock as the clock\nsource (Note that run time stats are only valid until the clock source\noverflows). The function vTaskGetRunTimeStats() will also be available\nif FREERTOS_USE_STATS_FORMATTING_FUNCTIONS and\nFREERTOS_USE_TRACE_FACILITY are enabled. vTaskGetRunTimeStats() will\ndisplay the run time of each task as a % of the total run time of all\nCPUs (task run time / no of CPUs) / (total run time / 100 )\n", 
                        "name": "FREERTOS_GENERATE_RUN_TIME_STATS", 
                        "range": null, 
                        "title": "Enable FreeRTOS to collect run time stats", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_USE_TICKLESS_IDLE", 
                                "help": "FreeRTOS will enter light sleep mode if no tasks need to run for this number\nof ticks.\n", 
                                "name": "FREERTOS_IDLE_TIME_BEFORE_SLEEP", 
                                "range": [
                                    2, 
                                    4294967295
                                ], 
                                "title": "Minimum number of ticks to enter sleep mode for", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": "PM_ENABLE", 
                        "help": "If power management support is enabled, FreeRTOS will be able to put\nthe system into light sleep mode when no tasks need to run for a number\nof ticks. This number can be set using FREERTOS_IDLE_TIME_BEFORE_SLEEP option.\nThis feature is also known as \"automatic light sleep\".\n\nNote that timers created using esp_timer APIs may prevent the system from\nentering sleep mode, even when no tasks need to run.\n\nIf disabled, automatic light sleep support will be disabled.\n", 
                        "name": "FREERTOS_USE_TICKLESS_IDLE", 
                        "range": null, 
                        "title": "Tickless idle support", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_DEBUG_INTERNALS && FREERTOS_DEBUG_INTERNALS", 
                                "help": "If enabled, debug information (including integrity checks) will be printed\nto UART for the port-specific MUX implementation.\n", 
                                "name": "FREERTOS_PORTMUX_DEBUG", 
                                "range": null, 
                                "title": "Debug portMUX portENTER_CRITICAL/portEXIT_CRITICAL", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "FREERTOS_PORTMUX_DEBUG && FREERTOS_DEBUG_INTERNALS && !FREERTOS_UNICORE", 
                                "help": "If enabled, additional debug information will be printed for recursive\nportMUX usage.\n", 
                                "name": "FREERTOS_PORTMUX_DEBUG_RECURSIVE", 
                                "range": null, 
                                "title": "Debug portMUX Recursion", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable this option to show the menu with internal FreeRTOS debugging features.\nThis option does not change any code by itself, it just shows/hides some options.\n", 
                        "is_menuconfig": true, 
                        "name": "FREERTOS_DEBUG_INTERNALS", 
                        "range": null, 
                        "title": "Debug FreeRTOS internals", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "title": "FreeRTOS", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "name": "HEAP_POISONING_DISABLED", 
                                "range": null, 
                                "title": "Basic (no poisoning)", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "name": "HEAP_POISONING_LIGHT", 
                                "range": null, 
                                "title": "Light impact", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice HEAP_CORRUPTION_DETECTION>", 
                                "help": null, 
                                "name": "HEAP_POISONING_COMPREHENSIVE", 
                                "range": null, 
                                "title": "Comprehensive", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable heap poisoning features to detect heap corruption caused by out-of-bounds access to heap memory.\n\nSee the \"Heap Memory Debugging\" page of the IDF documentation\nfor a description of each level of heap corruption detection.\n", 
                        "name": "HEAP_CORRUPTION_DETECTION", 
                        "title": "Heap corruption detection", 
                        "type": "choice"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "HEAP_TRACING", 
                                "help": "Number of stack frames to save when tracing heap operation callers.\n\nMore stack frames uses more memory in the heap trace buffer (and slows down allocation), but\ncan provide useful information.\n", 
                                "name": "HEAP_TRACING_STACK_DEPTH", 
                                "range": [
                                    0, 
                                    10
                                ], 
                                "title": "Heap tracing stack depth", 
                                "type": "int"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enables the heap tracing API defined in esp_heap_trace.h.\n\nThis function causes a moderate increase in IRAM code side and a minor increase in heap function\n(malloc/free/realloc) CPU overhead, even when the tracing feature is not used. So it's best to keep it disabled\nunless tracing is being used.\n", 
                        "name": "HEAP_TRACING", 
                        "range": null, 
                        "title": "Enable heap tracing", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "!HEAP_POISONING_DISABLED", 
                        "help": "Enables tracking the task responsible for each heap allocation.\n\nThis function depends on heap poisoning being enabled and adds four more bytes of overhead for each block\nallocated.\n", 
                        "name": "HEAP_TASK_TRACKING", 
                        "range": null, 
                        "title": "Enable heap task tracking", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "Heap memory debugging", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": "!MBEDTLS_HARDWARE_SHA", 
                        "help": "If this option is enabled, libsodium will use thin wrappers\naround mbedTLS for SHA256 & SHA512 operations.\n\nThis saves some code size if mbedTLS is also used. However it\nis incompatible with hardware SHA acceleration (due to the\nway libsodium's API manages SHA state).\n", 
                        "name": "LIBSODIUM_USE_MBEDTLS_SHA", 
                        "range": null, 
                        "title": "Use mbedTLS SHA256 & SHA512 implementations", 
                        "type": "bool"
                    }
                ], 
                "depends_on": null, 
                "title": "libsodium", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG", 
                                "help": "OpenSSL debugging level.\n\nOnly function whose debugging level is higher than \"OPENSSL_DEBUG_LEVEL\" works.\n\nFor example:\n    If OPENSSL_DEBUG_LEVEL = 2, you use function \"SSL_DEBUG(1, \"malloc failed\")\". Because 1 < 2, it will not print.\n", 
                                "name": "OPENSSL_DEBUG_LEVEL", 
                                "range": [
                                    0, 
                                    255
                                ], 
                                "title": "OpenSSL debugging level", 
                                "type": "int"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG", 
                                "help": "If the option is enabled, low-level module debugging function of OpenSSL is enabled, e.g. mbedtls internal debugging function.\n", 
                                "name": "OPENSSL_LOWLEVEL_DEBUG", 
                                "range": null, 
                                "title": "Enable OpenSSL low-level module debugging", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable OpenSSL debugging function.\n\nIf the option is enabled, \"SSL_DEBUG\" works.\n", 
                        "name": "OPENSSL_DEBUG", 
                        "range": null, 
                        "title": "Enable OpenSSL debugging", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "<choice OPENSSL_ASSERT>", 
                                "help": "Do nothing and \"SSL_ASSERT\" does not work.\n", 
                                "name": "OPENSSL_ASSERT_DO_NOTHING", 
                                "range": null, 
                                "title": "Do nothing", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "<choice OPENSSL_ASSERT>", 
                                "help": "Enable assert exiting, it will check and return error code.\n", 
                                "name": "OPENSSL_ASSERT_EXIT", 
                                "range": null, 
                                "title": "Check and exit", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG && <choice OPENSSL_ASSERT>", 
                                "help": "Enable assert debugging, it will check and show debugging message.\n", 
                                "name": "OPENSSL_ASSERT_DEBUG", 
                                "range": null, 
                                "title": "Show debugging message", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG && <choice OPENSSL_ASSERT>", 
                                "help": "Enable assert debugging and exiting, it will check, show debugging message and return error code.\n", 
                                "name": "OPENSSL_ASSERT_DEBUG_EXIT", 
                                "range": null, 
                                "title": "Show debugging message and exit", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "OPENSSL_DEBUG && <choice OPENSSL_ASSERT>", 
                                "help": "Enable assert debugging and blocking, it will check, show debugging message and block by \"while (1);\".\n", 
                                "name": "OPENSSL_ASSERT_DEBUG_BLOCK", 
                                "range": null, 
                                "title": "Show debugging message and block", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "OpenSSL function needs \"assert\" function to check if input parameters are valid.\n\nIf you want to use assert debugging function, \"OPENSSL_DEBUG\" should be enabled.\n", 
                        "name": "OPENSSL_ASSERT", 
                        "title": "Select OpenSSL assert function", 
                        "type": "choice"
                    }
                ], 
                "depends_on": null, 
                "title": "OpenSSL", 
                "type": "menu"
            }, 
            {
                "children": [
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Define maximum number of partitions that can be mounted.\n", 
                        "name": "SPIFFS_MAX_PARTITIONS", 
                        "range": [
                            1, 
                            10
                        ], 
                        "title": "Maximum Number of Partitions", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [
                                    {
                                        "children": [], 
                                        "depends_on": "SPIFFS_CACHE", 
                                        "help": "Enables memory write caching for file descriptors in hydrogen.\n", 
                                        "name": "SPIFFS_CACHE_WR", 
                                        "range": null, 
                                        "title": "Enable SPIFFS Write Caching", 
                                        "type": "bool"
                                    }, 
                                    {
                                        "children": [], 
                                        "depends_on": "SPIFFS_CACHE", 
                                        "help": "Enable/disable statistics on caching. Debug/test purpose only.\n", 
                                        "name": "SPIFFS_CACHE_STATS", 
                                        "range": null, 
                                        "title": "Enable SPIFFS Cache Statistics", 
                                        "type": "bool"
                                    }
                                ], 
                                "depends_on": null, 
                                "help": "Enables/disable memory read caching of nucleus file system\noperations.\n", 
                                "name": "SPIFFS_CACHE", 
                                "range": null, 
                                "title": "Enable SPIFFS Cache", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "SPIFFS Cache Configuration", 
                        "type": "menu"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Always check header of each accessed page to ensure consistent state.\nIf enabled it will increase number of reads from flash, especially\nif cache is disabled.\n", 
                        "name": "SPIFFS_PAGE_CHECK", 
                        "range": null, 
                        "title": "Enable SPIFFS Page Check", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Define maximum number of GC runs to perform to reach desired free pages.\n", 
                        "name": "SPIFFS_GC_MAX_RUNS", 
                        "range": [
                            1, 
                            255
                        ], 
                        "title": "Set Maximum GC Runs", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Enable/disable statistics on gc. Debug/test purpose only.\n", 
                        "name": "SPIFFS_GC_STATS", 
                        "range": null, 
                        "title": "Enable SPIFFS GC Statistics", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Logical page size of SPIFFS partition, in bytes. Must be multiple\nof flash page size (which is usually 256 bytes).\nLarger page sizes reduce overhead when storing large files, and\nimprove filesystem performance when reading large files.\nSmaller page sizes reduce overhead when storing small (< page size)\nfiles.\n", 
                        "name": "SPIFFS_PAGE_SIZE", 
                        "range": [
                            256, 
                            1024
                        ], 
                        "title": "SPIFFS logical page size", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "Object name maximum length. Note that this length include the\nzero-termination character, meaning maximum string of characters\ncan at most be SPIFFS_OBJ_NAME_LEN - 1.\n\nSPIFFS_OBJ_NAME_LEN + SPIFFS_META_LENGTH should not exceed\nSPIFFS_PAGE_SIZE - 64.\n", 
                        "name": "SPIFFS_OBJ_NAME_LEN", 
                        "range": [
                            1, 
                            256
                        ], 
                        "title": "Set SPIFFS Maximum Name Length", 
                        "type": "int"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": "SPIFFS_USE_MAGIC", 
                                "help": "If this option is enabled, the magic will also be dependent\non the length of the filesystem. For example, a filesystem\nconfigured and formatted for 4 megabytes will not be accepted\nfor mounting with a configuration defining the filesystem as 2 megabytes.\n", 
                                "name": "SPIFFS_USE_MAGIC_LENGTH", 
                                "range": null, 
                                "title": "Enable SPIFFS Filesystem Length Magic", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "help": "Enable this to have an identifiable spiffs filesystem.\nThis will look for a magic in all sectors to determine if this\nis a valid spiffs system or not at mount time.\n", 
                        "name": "SPIFFS_USE_MAGIC", 
                        "range": null, 
                        "title": "Enable SPIFFS Filesystem Magic", 
                        "type": "bool"
                    }, 
                    {
                        "children": [], 
                        "depends_on": null, 
                        "help": "This option sets the number of extra bytes stored in the file header.\nThese bytes can be used in an application-specific manner.\nSet this to at least 4 bytes to enable support for saving file\nmodification time.\n\nSPIFFS_OBJ_NAME_LEN + SPIFFS_META_LENGTH should not exceed\nSPIFFS_PAGE_SIZE - 64.\n", 
                        "name": "SPIFFS_META_LENGTH", 
                        "range": null, 
                        "title": "Size of per-file metadata field", 
                        "type": "int"
                    }, 
                    {
                        "children": [], 
                        "depends_on": "SPIFFS_META_LENGTH >= 4", 
                        "help": "If enabled, then the first 4 bytes of per-file metadata will be used\nto store file modification time (mtime), accessible through\nstat/fstat functions.\nModification time is updated when the file is opened.\n", 
                        "name": "SPIFFS_USE_MTIME", 
                        "range": null, 
                        "title": "Save file modification time", 
                        "type": "bool"
                    }, 
                    {
                        "children": [
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enabling this option will print general debug mesages to the console.\n", 
                                "name": "SPIFFS_DBG", 
                                "range": null, 
                                "title": "Enable general SPIFFS debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enabling this option will print API debug mesages to the console.\n", 
                                "name": "SPIFFS_API_DBG", 
                                "range": null, 
                                "title": "Enable SPIFFS API debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enabling this option will print GC debug mesages to the console.\n", 
                                "name": "SPIFFS_GC_DBG", 
                                "range": null, 
                                "title": "Enable SPIFFS Garbage Cleaner debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": "SPIFFS_CACHE", 
                                "help": "Enabling this option will print cache debug mesages to the console.\n", 
                                "name": "SPIFFS_CACHE_DBG", 
                                "range": null, 
                                "title": "Enable SPIFFS Cache debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enabling this option will print Filesystem Check debug mesages\nto the console.\n", 
                                "name": "SPIFFS_CHECK_DBG", 
                                "range": null, 
                                "title": "Enable SPIFFS Filesystem Check debug", 
                                "type": "bool"
                            }, 
                            {
                                "children": [], 
                                "depends_on": null, 
                                "help": "Enable this option to enable SPIFFS_vis function in the API.\n", 
                                "name": "SPIFFS_TEST_VISUALISATION", 
                                "range": null, 
                                "title": "Enable SPIFFS Filesystem Visualization", 
                                "type": "bool"
                            }
                        ], 
                        "depends_on": null, 
                        "title": "Debug Configuration", 
                        "type": "menu"
                    }
                ], 
                "depends_on": null, 
                "title": "SPIFFS Configuration", 
                "type": "menu"
            }
        ], 
        "depends_on": null, 
        "title": "Component config", 
        "type": "menu"
    }
]